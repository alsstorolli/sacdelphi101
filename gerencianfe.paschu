unit gerencianfe;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ACBrNFe, Grids, SqlDtg, StdCtrls, Mask, SQLEd, Buttons, SQLBtn,
  alabel, SQLGrid, ExtCtrls, SqlExpr, ACBrNFeDANFEClass, ACBrNFeDANFERave,
  pcnConversao, FileCtrl, DB, DBClient, SimpleDS, SqlSis, backup,
  ShellApi, ACBrNFeDANFERaveCB;

type
  TFGerenciaNfe = class(TForm)
    PCadastro: TPanel;
    PBotoes: TSQLPanelGrid;
    APHeadLabel1: TAPHeadLabel;
    bconsultar: TSQLBtn;
    bSair: TSQLBtn;
    PMens: TSQLPanelGrid;
    Panel1: TPanel;
    Edunidade: TSQLEd;
    EdUnid_codigo: TSQLEd;
    Edtermino: TSQLEd;
    EdInicio: TSQLEd;
    pgrid: TSQLPanelGrid;
    Grid: TSqlDtGrid;
    bvexml: TSQLBtn;
    bimpdanfe: TSQLBtn;
    PrintDialogBoleto: TPrintDialog;
    SQLPanelGrid1: TSQLPanelGrid;
    ComboBox1: TComboBox;
    StaticText1: TStaticText;
    bcancelanfe: TSQLBtn;
    binutiliza: TSQLBtn;
    EdNumeroi: TSQLEd;
    listaarquivos: TFileListBox;
    bemail: TSQLBtn;
    bconsultasefa: TSQLBtn;
    bimpdanfexml: TSQLBtn;
    OpenDialog1: TOpenDialog;
    datas: TDataSource;
    TMovesto:TSqlds;
    ACBrNFeDANFERave1: TACBrNFeDANFERave;
    ACBrNFe1: TACBrNFe;
    bcartacorrecao: TSQLBtn;
    PCartacorrecao: TSQLPanelGrid;
    Pcartacorrecao1: TSQLPanelGrid;
    MemoResp: TMemo;
    MemoRespWs: TMemo;
    bgeraxml: TSQLBtn;
    bimpcce: TSQLBtn;
    ACBrNFeDANFERaveCB1: TACBrNFeDANFERaveCB;
    Edtipomov: TSQLEd;
    SetEdCLIE_NOME: TSQLEd;
    EdCliente: TSQLEd;

    procedure EdAmbienteExitEdit(Sender: TObject);
    procedure bconsultarClick(Sender: TObject);
    procedure bvexmlClick(Sender: TObject);
    procedure bimpdanfeClick(Sender: TObject);
    procedure GridClick(Sender: TObject);
    procedure EdUnid_codigoExitEdit(Sender: TObject);
    procedure bcancelanfeClick(Sender: TObject);
    procedure binutilizaClick(Sender: TObject);
    procedure EdNumeroiExitEdit(Sender: TObject);
    procedure EdNumeroiValidate(Sender: TObject);
    procedure Enviaemail(xtrans:string='' );
    procedure bconsultasefaClick(Sender: TObject);
    procedure bimpdanfexmlClick(Sender: TObject);
    procedure EdUnid_codigoValidate(Sender: TObject);
    procedure EdUnid_codigoKeyPress(Sender: TObject; var Key: Char);
    procedure bemailClick(Sender: TObject);
    procedure bcartacorrecaoClick(Sender: TObject);
    procedure bgeraxmlClick(Sender: TObject);
    procedure bimpcceClick(Sender: TObject);
//    procedure Exe(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Execute( numeronota:string='' );
    function GetSituacao(Q:TSqlquery):string;
    function GetRetornoWS(Q:TSqlquery):string;
    procedure AtualizaGrid(nf:integer ; xretorno:string);
    function TrataRetornoXMotivo( StringXml:String ):string ;
    function GetQualXml( Q:TSqlquery ;temcampo:string):String;
// 07.11.13
    procedure InutilizaNumero( xNumero:Integer );

  end;

var
  FGerenciaNfe: TFGerenciaNfe;
  Tiposdemovimento,TiposNao,arquivorave,sqlcliente:string;
  campo:TDicionario;
  xnumeronota:string;

//  ACBrNFeDANFERave1:TACBrNFeDANFERave;
//  ACBrNFe1:TACBrNFe;


implementation

uses Geral, Sqlfun, SQLRel, pcnNFe, Mostraxml, Printers,
     ACBrNFeNotasFiscais, expnfetxt, ACBrNFeConfiguracoes , Arquiv,
  pcnCCeNFe, ConfDcto, pcnEnvEventoNFe;

{$R *.dfm}

{ TFGerenciaNfe }

procedure TFGerenciaNfe.Execute( numeronota:string='' );
/////////////////////////////////////////////////////////
var codigo,s:string;
begin

//  ACBrNFeDANFERave1:=TACBrNFeDANFERave.Create(self);
//  ACBrNFe1:=TACBrNFe.Create(self);
///////////////////  ACBrNFeDANFERave1.ACBrNFe:=ACBrNFe1;

//  bgeraxml.Visible:=Global.Usuario.OutrosAcessos[0334]=true;
//  bgeraxml.Enabled:=Global.Usuario.OutrosAcessos[0334]=true;

  arquivorave:=ExtractFilePath(Application.ExeName)+'NotaFiscalEletronica.rav';
// 31.01.13
//  arquivorave:=ExtractFilePath(Application.ExeName)+'DANFE_Rave513.rav';
  if not FileExists(arquivorave) then
     arquivorave:='\nfesac\NotaFiscalEletronica.rav';
  if not FileExists(arquivorave) then begin
     Avisoerro('Arquivo .RAV não encontrado');
     exit;
  end;
  ACBrNFeDANFERave1.RavFile:=arquivorave;
  Show;
  Grid.clear;
  EdUnid_codigo.text:=Global.CodigoUnidade;
  tiposdemovimento:=Global.TiposSaida+';'+Global.CodDevolucaoCompra+';'+Global.CodCompraProdutor+';'+
                    Global.CodDrawBackEnt+';'+Global.CodDevolucaoIgualVenda+';'+Global.CodEntradaImobilizado+';'+
                    Global.CodCompraProdutorReclassifica+';'+Global.CodCompraConsignado+';'+Global.CodDevolucaodeRemessa+';'+
                    Global.CodDevolucaoRoman+';'+Global.CodEstornoNFeSai+';'+Global.codCompraProdutorMerenda+';'+
                    FGeral.GetConfig1AsString('TIPOSENUMSAIDA'); // 18.05.11

// 26.03.09 - colocado tipo ET - entrada de imobilizado
// 30.09.10 - colocado tipo DA - devolucao de romaneio
  tiposnao:=Global.TiposNaoFiscal+';'+Global.CodVendaInterna;
  if trim(FGeral.GetConfig1AsString('Pastaexpnfexml'))<>'' then
    acbrnfe1.Configuracoes.Arquivos.PathNFe:=FGeral.GetConfig1AsString('Pastaexpnfexml');

  acbrnfe1.Configuracoes.Certificados.NumeroSerie:=FGeral.GetNroSerieCertificado(EdUnid_codigo.text);
//  if trim(FGeral.GetConfig1AsString('NumSerieCert'))<>'' then
//    acbrnfe1.Configuracoes.Certificados.NumeroSerie:=FGeral.GetConfig1AsString('NumSerieCert');
  if trim(FGeral.GetConfig1AsString('Pastaretonfexml'))<>'' then begin
    acbrnfe1.Configuracoes.Arquivos.PathCan:=FGeral.GetConfig1AsString('Pastaretonfexml');
// 15.03.10
    acbrnfe1.Configuracoes.Geral.PathSalvar:=FGeral.GetConfig1AsString('Pastaretonfexml');
  end;
  if trim(FGeral.GetConfig1AsString('Pastainunfexml'))<>'' then
    acbrnfe1.Configuracoes.Arquivos.PathInu:=FGeral.GetConfig1AsString('Pastainunfexml');
  if trim(FGeral.GetConfig1AsString('Pastaimagemdanfe'))<>'' then begin
//    Acbrnfe1.DANFE.Logo:=FGeral.GetConfig1AsString('Pastaimagemdanfe')
// 28.04.11
    if FileExists( FGeral.GetConfig1AsString('Pastaimagemdanfe') ) then
      AcbrnfeDanfeRave1.Logo:=FGeral.GetConfig1AsString('Pastaimagemdanfe')
    else
      AcbrnfeDanfeRave1.Logo:='';
  end else
//    Acbrnfe1.DANFE.Logo:='';
    AcbrnfeDanfeRave1.Logo:='';
  if trim(FGeral.GetConfig1AsString('AmbienteNFe'))<>'' then begin
    if FGeral.GetConfig1AsString('AmbienteNFe')='1' then
      acbrnfe1.Configuracoes.WebServices.Ambiente:=taProducao
    else
      acbrnfe1.Configuracoes.WebServices.Ambiente:=taHomologacao;
  end else
      acbrnfe1.Configuracoes.WebServices.Ambiente:=taHomologacao;
// 21.09.10 - configura aqui por caso de 'atualizar o componente'
  ACbrNfe1.Configuracoes.Arquivos.Salvar:=true;
//  if Sistema.Hoje>=Texttodate('01102010') then
//    Acbrnfe1.Configuracoes.Geral.PathSchemas:=ExtractFilePath( Application.ExeName )+'Schemas20'
  if trim( FGeral.GetConfig1AsString('Pastaschemas') ) <> '' then
    Acbrnfe1.Configuracoes.Geral.PathSchemas:=FGeral.GetConfig1AsString('Pastaschemas')
  else
//    Acbrnfe1.Configuracoes.Geral.PathSchemas:=ExtractFilePath( Application.ExeName )+'Schemas';
// 01.04.2011
    Acbrnfe1.Configuracoes.Geral.PathSchemas:=ExtractFilePath( Application.ExeName )+'Schemas20';

  Acbrnfe1.DANFE:=AcbrNfeDanfeRave1;
// 04.10.2010 - path pdf para envio de email com pdf
  if trim( FGeral.GetConfig1AsString('PastaPdfs') ) <> '' then
    Acbrnfe1.DANFE.PathPDF:=FGeral.GetConfig1AsString('PastaPdfs')
  else
    Acbrnfe1.DANFE.PathPDF:=ExtractFilePath( Application.ExeName );
// 19.03.15
//  if global.topicos[1041] then
    Acbrnfe1.Configuracoes.Geral.VersaoDF:=ve310;
//  else
//    Acbrnfe1.Configuracoes.Geral.VersaoDF:=ve200;

///////////////
  if EdInicio.isempty then
    EdInicio.setdate(sistema.hoje);
  if EdTermino.isempty then
    EdTermino.setdate(sistema.hoje);
  Combobox1.Items.Assign(Printer.Printers);
//  Combobox1.ItemIndex:=Printer.PrinterIndex;
// usa a impressora configurada no impresso da nota de saida em formulario continou
  Codigo:=FGeral.GetConfig1AsString('Imprnotasaida');
//  FConfDcto.GetConfiguracao(Codigo);
  s:=GetIni(Sistema.NameSystem+'D','Impressoras','DCTO'+Codigo);
  if s<>'' then
    Combobox1.Text:=s
  else
    Combobox1.ItemIndex:=Printer.PrinterIndex;

  xnumeronota:=numeronota;
  PCartacorrecao.Visible:=false;
  PCartacorrecao1.Visible:=false;
  if trim(xnumeronota)<>'' then begin
    EdUnid_codigo.Next;   // 31.07.11
    bconsultarClick(self);
  end else begin
    EdInicio.SetFirstEd;
  end;
// 16.12.13
  bcancelanfe.Enabled:=(not Global.Topicos[1037]);
  Edcliente.Enabled:=Global.Usuario.OutrosAcessos[0339];
  Edcliente.text:='';
end;

procedure TFGerenciaNfe.EdAmbienteExitEdit(Sender: TObject);
begin
   bconsultarclick(self);
end;

procedure TFGerenciaNfe.bconsultarClick(Sender: TObject);
//////////////////////////////////////////////////////////////
var Q:TSqlquery;
    sqlexp,sqlnotas,sqlconfmov,sqltipomov:string;
    p:integer;
begin
  sqlexp:='';
  sqlnotas:='';
  if (trim(xnumeronota)<>'') and ( trim(xnumeronota)<>'A' ) then
//    sqlnotas := 'and moes_numerodoc = '+inttostr(xnumeronota);
// 04.10.11
    sqlnotas := 'and '+FGeral.GetIN('moes_numerodoc',xnumeronota,'N');
//  sqlexp:=' and moes_nfeexp=''S'''
//  else if EdExportadas.text='N' then
//    sqlexp:=' and ( (moes_nfeexp is null) or (moes_nfeexp<>''S'') )';
//  if not EdNotas.isempty then
//    sqlnotas:=' and '+FGeral.GetIN('moes_numerodoc',EdNOtas.text,'N');
// 23.01.12
  sqlconfmov:='';
  if FGeral.ConfiguradoECF then
//    sqlconfmov:=' and moes_comv_codigo <> '+inttostr(FGeral.GetConfig1AsInteger('ConfMovECF'));
// 07.11.14
    sqlconfmov:=' and '+FGeral.GetNOTIN('moes_comv_codigo',inttostr(FGeral.GetConfig1AsInteger('ConfMovECF'))+';'+inttostr(FGeral.GetConfig1AsInteger('ConfMovECFVC')),'N') ;
// 16.04.15
  sqltipomov:='';
  if Edtipomov.text='S' then sqltipomov:=' and '+FGeral.getin('moes_tipomov',Global.CodCompraProdutor,'C');
// 19.05.15 - Coorlaf Pitanga
  sqlcliente:='';
  if not Edcliente.isempty then sqlcliente:=' and moes_tipo_codigo ='+EdCliente.assql+' and moes_tipocad = ''C''';
  Q:=sqltoquery('select movesto.*,clientes.clie_razaosocial,clientes.clie_tipo,clientes.clie_endres,clientes.clie_uf from movesto'+
                ' left join clientes on (clie_codigo=moes_tipo_codigo)'+
                ' where moes_datamvto>='+EdInicio.assql+
                ' and '+FGeral.getin('moes_status','N;E;D;X;I','C')+
                ' and moes_datamvto<='+EdTermino.assql+
                ' and moes_unid_codigo='+EdUnid_codigo.assql+
                sqlconfmov+sqltipomov+sqlcliente+
//                ' and  moes_datacont>1'+
// 18.05.11
                ' and moes_datacont > '+DatetoSql(Global.DataMenorBanco)+
                ' and '+FGeral.Getin('moes_tipomov',tiposdemovimento,'C')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                sqlexp+sqlnotas+
//                ' and moes_tipocad='+stringtosql(Cv)+
                ' order by moes_numerodoc,moes_datamvto,moes_vispra' );
  if Q.eof then begin
    Avisoerro('Nada encontrado neste período');
    exit;
  end;
//  Grid.QueryToGrid(Q);
  Grid.Clear;p:=1;
// 14.08.12
  MemoResp.Lines.Clear;
  MemoRespWs.Lines.Clear;
  while not Q.eof do begin
    Grid.Cells[Grid.GetColumn('moes_numerodoc'),p]:=Q.fieldbyname('moes_numerodoc').asstring;
    Grid.Cells[Grid.GetColumn('moes_dataemissao'),p]:=FGeral.FormataData( Q.fieldbyname('moes_dataemissao').asdatetime );
    Grid.Cells[Grid.GetColumn('moes_datamvto'),p]:=FGeral.FormataData( Q.fieldbyname('moes_datamvto').asdatetime );
    Grid.Cells[Grid.GetColumn('moes_vlrtotal'),p]:=floattostr(Q.fieldbyname('moes_vlrtotal').Ascurrency);
    Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),p]:=Q.fieldbyname('moes_tipo_codigo').asstring;
    if Q.FieldByName('moes_tipocad').AsString='C' then begin
      Grid.Cells[Grid.GetColumn('clie_razaosocial'),p]:=Q.fieldbyname('clie_razaosocial').asstring;
    end else begin
      Grid.Cells[Grid.GetColumn('clie_razaosocial'),p]:=FGeral.GetNomeRazaoSocialEntidade( Q.fieldbyname('moes_tipo_codigo').asinteger,
                                Q.fieldbyname('moes_tipocad').asstring,'R');
    end;
    Grid.Cells[Grid.GetColumn('situacao'),p]:=GetSituacao(Q);
// 04.10.11 - Novi - vindo 'da pesagem'
    if ( (trim(xnumeronota)<>'') and ( xnumeronota=Q.fieldbyname('moes_numerodoc').asstring) ) or ( not EdCliente.isempty )
      then
      Grid.Cells[Grid.GetColumn('marcado'),p]:='OK';

    Grid.Cells[Grid.GetColumn('moes_chavenfe'),p]:=Q.fieldbyname('moes_chavenfe').asstring;
    Grid.Cells[Grid.GetColumn('moes_transacao'),p]:=Q.fieldbyname('moes_transacao').asstring;
    Grid.Cells[Grid.GetColumn('retornows'),p]:=Q.fieldbyname('moes_retornonfe').asstring;
    Grid.AppendRow;
    inc(p);
    Q.Next;
  end;
  Grid.SetFocus;
//  GetRetornoWs(Q);

end;

function TFGerenciaNfe.GetSituacao(Q:TSqlquery): string;
///////////////////////////////////////////////////////////
begin
  result:='XML NÃO Exportado';
  if Q.fieldbyname('moes_nfeexp').AsString='S' then begin
    result:='XML Exportado';
    if trim(Q.fieldbyname('moes_chavenfe').AsString)='' then
      result:='Ainda não autorizada pela SEFA';
    if Q.fieldbyname('moes_status').AsString='I' then
      result:='Numeração Inutilizada';
  end;
  if trim(Q.fieldbyname('moes_chavenfe').AsString)<>'' then begin
    result:='Autorizada';
    if Datetoano(Q.fieldbyname('moes_dtnfecanc').AsDateTime,true)>1920 then
      result:='Cancelada';
  end else if Q.fieldbyname('moes_status').AsString='I' then
    result:='Numeração Inutilizada';

end;

function TFGerenciaNfe.GetRetornoWS(Q: TSqlquery): string;
begin
//  ACBrNFe1.WebServices.StatusServico.Executar;
//  ShowMessage(ACBrNFe1.WebServices.StatusServico.Msg)
end;

procedure TFGerenciaNfe.bvexmlClick(Sender: TObject);
/////////////////////////////////////////////////////////////
var ct,temxmltext:string;
    Q:TSqlquery;
//    Str:TMemoryStream;
    wxml:AnsiString;
begin
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   campo:=Sistema.GetDicionario('movesto','moes_xmlnfet');
   if campo.Tipo<>'' then begin
     temxmltext:='S';
     Q:=Sqltoquery('select moes_xmlnfe,moes_xmlnfet,moes_xmlnfecanc from movesto where moes_transacao='+Stringtosql(ct)+
                 ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''')
   end else
     Q:=Sqltoquery('select moes_xmlnfe from movesto where moes_transacao='+Stringtosql(ct)+
                 ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''');
//   Str:=TMemoryStream.Create;
   if not Q.eof then begin
//     LoadBlob('movesto','moes_xmlnfe','moes_transacao='+Stringtosql(ct),str);
//     LoadBlob('movesto','moes_xmlnfet','moes_transacao='+Stringtosql(ct),str);
//     FMostraXml.Execute( str );
//     wxml:=Q.fieldbyname('moes_xmlnfe').asstring;
     if trim(Q.fieldbyname('moes_xmlnfecanc').asstring)<>'' then
       wxml:=GetQualxml( Q,'X' )
     else
       wxml:=GetQualxml( Q,'S' );
     FMostraXml.Execute(  wxml );
   end;
   FGeral.FechaQuery(Q);
end;

procedure TFGerenciaNfe.bimpdanfeClick(Sender: TObject);
//////////////////////////////////////////////////////////
var ct,ct1,temxmltext,campoxml:string;
    Q:TSqlquery;
    ListaXML,ListaProtDpec,ListaTrans:TStringList;
    arqxml,codigosdesti,codigosdesti1:string;
    marc,i:integer;

    function GetProtocoloDpec(nNF:integer):string;
    /////////////////////////////////////////////
    var x:integer;
    begin
      result:='';
      for x:=0 to ListaProtDpec.Count-1 do begin
        if pos(';NF'+strzero(nNF,6),ListaProtDpec.Strings[x])>0 then begin
          result:=copy(ListaProtDpec.Strings[x],1,pos(';',ListaProtDpec.Strings[x])-1 );
          break;
        end;
      end;
    end;

begin
///////////////////////////////////////////////
   PCartacorrecao.Visible:=false;
   PCartacorrecao1.Visible:=false;
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   codigosdesti:=Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),Grid.row];
   marc:=0;
   ct1:='';
   codigosdesti1:='';
   for i:=0 to Grid.rowcount do begin
     if Grid.Cells[Grid.getcolumn('marcado'),i]='OK' then begin
       inc(marc);
       ct1:=ct1+Grid.Cells[Grid.getcolumn('moes_transacao'),i]+';';
       codigosdesti1:=codigosdesti1+Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),i]+';';
     end;
   end;
   if ct1<>'' then ct:=ct1;
   if trim(ct)='' then begin
      Avisoerro('Sem nota escolhida');
      exit;
   end;
   if trim(codigosdesti)='' then begin
      Avisoerro('Sem cliente OU nota escolhida');
      exit;
   end;
   if codigosdesti1<>'' then codigosdesti:=codigosdesti1;
//   Q:=Sqltoquery('select moes_xmlnfe,moes_dtnfeauto from movesto where moes_transacao='+Stringtosql(ct)+
   campo:=Sistema.GetDicionario('movesto','moes_xmlnfet');
   temxmltext:='N';
   if campo.Tipo<>'' then begin
     temxmltext:='S';
     Q:=Sqltoquery('select moes_xmlnfe,moes_xmlnfet,moes_dtnfeauto,moes_transacao,moes_dtnfecanc,moes_protodpec,moes_numerodoc from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
// para nao imprimir transferencia 'duas vezes'
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C'' order by moes_numerodoc')
   end else
     Q:=Sqltoquery('select moes_xmlnfe,moes_dtnfeauto,moes_transacao,moes_dtnfecanc,moes_protodpec,moes_numerodoc from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
// para nao imprimir transferencia 'duas vezes'
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C'' order by moes_numerodoc');
{ //
   if trim(Q.fieldbyname('moes_xmlnfe').asstring)='' then begin
      Avisoerro('Transação '+ct+' sem XML gravado');
      exit;
   end else if FExpNfetxt.GetTag('tpemis',Q.fieldbyname('moes_xmlnfe').asstring)='2' then begin
     Aviso('Transação '+ct+' se ref. a nfe em contingência. Impressão de Danfe em form. segurança');
   end else if DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)<=1900 then begin
     Avisoerro('Transação '+ct+' aind não foi autorizada');
     exit;
   end else if DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)>1900 then begin
     Avisoerro('NFe ref. Transação '+ct+' foi cancelada na Sefa');
     exit;
   end;
}

   AcbrNfe1.NotasFiscais.Clear;
   ListaXML:=TStringList.Create;
   ListaTrans:=TStringList.Create;
   arqxml:='IMPDanfe.txt';
   if not FileExists(arquivorave) then begin
     Avisoerro('Arquivo '+arquivorave+' não encontrado');
     exit;
   end;
// 01.07.10
   if Q.eof then begin
     Avisoerro('Nada encontrado para impressão.  Checar notas');
     exit;
   end;
// 07.07.10 - Clessi - configuracao das casas decimais da qtde e do valor unitario
   if FGeral.GetConfig1AsInteger('decqtdedanfe') >0 then
     ACBrNFeDANFERave1.CasasDecimais._qCom:=FGeral.GetConfig1AsInteger('decqtdedanfe');
   if FGeral.GetConfig1AsInteger('decunitariodanfe') >0 then
     ACBrNFeDANFERave1.CasasDecimais._vUnCom:=FGeral.GetConfig1AsInteger('decunitariodanfe');

   ListaProtDpec:=TStringList.Create;

   while not Q.eof do begin

// 28.04.11
      campoxml:='moes_xmlnfet';
      if trim(Q.fieldbyname('moes_xmlnfet').asstring)='' then
        campoxml:='moes_xmlnfe';
/////////
//      if trim(Q.fieldbyname('moes_xmlnfe').asstring)='' then
// 09.12.10
      if ( trim(Q.fieldbyname(campoxml).asstring)='' )  then
        Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' sem XML gravado')
// contigencia com form. seg.
      else if FExpNfetxt.GetTag('tpemis',Q.fieldbyname(campoxml).asstring)='2' then begin
        ListaXML.Clear;
        ListaXML.Append( GetQualXml(Q,temxmltext) ) ;
        ListaXml.SaveToFile(arqxml);
        AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
//dpec
      end else if FExpNfetxt.GetTag('tpemis',Q.fieldbyname(campoxml).asstring)='4' then begin
        if trim(Q.fieldbyname('moes_protodpec').asstring)='' then
          Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' sem Protocolo de Envio ao DPEC')
        else begin
          ListaXML.Clear;
          ListaXML.Append( GetQualXml(Q,temxmltext) );
          ListaXml.SaveToFile(arqxml);
          AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
          ListaProtDpec.Add(Q.fieldbyname('moes_protodpec').asstring+';NF'+strzero(Q.fieldbyname('moes_numerodoc').asinteger,6));
        end;
      end else if DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)<=1900 then
        Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' aind não foi autorizada')
      else if DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)>1900 then begin
        Avisoerro('NFe ref. Transação '+ct+' foi cancelada na Sefa');
      end else begin
        ListaXML.Clear;
        ListaXML.Append( GetQualXml(Q,temxmltext) );
        ListaXml.SaveToFile(arqxml);
        AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
        ListaTrans.Add(Q.fieldbyname('moes_transacao').asstring);
      end;
      Q.Next;
   end;
   if AcbrNfe1.NotasFiscais.Count>0 then begin

     Printer.PrinterIndex := ComboBox1.ItemIndex;
     ACBrNFeDANFERave1.Impressora:=Combobox1.Items.Strings[ComboBox1.ItemIndex];
     if FGeral.GetConfig1AsInteger('copiasdanfe')>0 then
       PrintDialogBoleto.Copies:=FGeral.GetConfig1AsInteger('copiasdanfe');

// 19.04.11 - Capeg - leite das crianças
       if marc>1 then  begin
         if not PrintDialogBoleto.Execute then begin
           exit;
         end;
       end;

//     AcbrNfe1.DANFE.NumCopias:=PrintDialogBoleto.Copies;
// 21.09.10
     AcbrNfeDANFERave1.NumCopias:=PrintDialogBoleto.Copies;
// 02.02.10 - Novi - vava
     AcbrNfeDANFERave1.Email:=EdUnid_codigo.ResultFind.fieldbyname('unid_email').asstring;
//     AcbrNfe1.DANFE.Site:=

     AcbrNfe1.NotasFiscais.GerarNFe;
// 01.12.10 - Massas Granzotto -
     if marc>1 then begin
        ACBrNFeDANFERave1.MostrarPreview:=false;
     end else
        ACBrNFeDANFERave1.MostrarPreview:=true;

     for i:=0 to AcbrNfe1.NotasFiscais.Count-1 do begin
        ACBrNFeDANFERave1.ProtocoloNFe:=GetProtocoloDpec(ACBrNFe1.NotasFiscais.Items[i].NFe.Ide.nNF);
//        AcbrNfe1.NotasFiscais. ;
 //       if  AcbrNfe1.NotasFiscais.Items[0].NFe.Ide.tpEmis=teDPEC  then
//            ACBrNFe1.WebServices.ConsultaDPEC.Executar ;

//        AcbrNfe1.NotasFiscais.Imprimir;
        ACBrNFeDANFERave1.ImprimirDANFE( ACBrNFe1.NotasFiscais.Items[i].NFe );
     end;
// 06.07.11
     if Global.Topicos[1022] then begin
       for i:=0 to ListaTrans.count-1 do begin
// 12.04.12  - Granzotto
          if ListaTrans.count>1 then begin
            if Confirma('Envia email ?') then
              Enviaemail( ListaTrans[i] );
          end else
            Enviaemail( ListaTrans[i] );

       end;
       ListaTrans.Free;
     end;

   end else
     Avisoerro('Nota(s) não armazenadas para impressão.');  // 14.07.10 - Doce Pimenta

   FGeral.FechaQuery(Q);
   PrintDialogBoleto.Copies:=1;

end;

procedure TFGerenciaNfe.GridClick(Sender: TObject);
////////////////////////////////////////////////////////////////////////////////////////////////////////
begin
   if ( Grid.col=Grid.getcolumn('marcado') ) and ( trim(Grid.cells[Grid.getcolumn('moes_transacao'),Grid.row])<>'' ) then begin
     if Grid.cells[Grid.getcolumn('marcado'),Grid.row]='OK' then begin
       Grid.cells[Grid.getcolumn('marcado'),Grid.row]:='';
//       dec(Chequesmarcados);
     end else begin
       Grid.cells[Grid.getcolumn('marcado'),Grid.row]:='OK';
//       inc(Chequesmarcados);
     end;
   end;

end;

procedure TFGerenciaNfe.EdUnid_codigoExitEdit(Sender: TObject);
begin
     bconsultarclick(self);

end;

procedure TFGerenciaNfe.bcancelanfeClick(Sender: TObject);
/////////////////////////////////////////////////////////////////
var ct,justificativa,arqxml,arqxmlretorno,cretorno,idlote:string;
    Q:TSqlquery;
    Listaxml:TStringlist;
    posicaogrid,r,nok:integer;

    function TemPendenciaBaixada(xtrans:string):boolean;
    ////////////////////////////////////////////////////////
    var QP:Tsqlquery;
    begin
      result:=false;
       QP:=sqltoquery('select pend_status from pendencias where pend_transacao='+Stringtosql(xtrans));
       if not QP.eof then begin
         if pos( QP.fieldbyname('pend_status').asstring,'B;K' ) >0 then
           result:=true;
       end;
       FGeral.FechaQuery(QP);
    end;

begin
////////////////////////////


   if Grid.Cells[Grid.getcolumn('marcado'),grid.row]<>'OK' then begin
     Avisoerro('Usar a coluna MARCADO para escolher qual NFe cancelar');
     exit;
   end;
   posicaogrid:=Grid.row;
   nok:=0;
   for r:=1 to Grid.RowCount do begin
      if Grid.Cells[Grid.getcolumn('marcado'),r]='OK' then inc(nok);
   end;
   if nok>1 then begin
     Avisoerro('Marcar apenas UMA nfe para cancelamento');
     exit;
   end;
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),posicaoGrid];
   Q:=Sqltoquery('select moes_xmlnfe,moes_dtnfeauto,moes_numerodoc,moes_dtnfecanc,moes_xmlnfet from movesto where moes_transacao='+Stringtosql(ct)+
                 ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''');
   if not Q.eof then begin
      if trim(Q.fieldbyname('moes_xmlnfet').asstring)='' then
        Avisoerro('Transação '+ct+' sem XML gravado')
      else if DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)<=1900 then
        Avisoerro('Transação '+ct+' ainda não foi autorizada')
      else if DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)>1900 then
        Avisoerro('NFe ref. Transação '+ct+' já foi cancelada na Sefa em '+Fgeral.FormataData(Q.fieldbyname('moes_dtnfecanc').asdatetime))
// 01.07.11 - Novicarnes - Vava - ver se vai fazer mesmo...
      else if TemPendenciaBaixada( ct ) then
        Avisoerro('NFe ref. Transação '+ct+' tem pendência já baixada no sistema ')
      else begin
        if not Input('Justificativa ( mínimo 15 caracteres )','Motivo Cancelamento',justificativa,150,true) then exit;
        if trim(justificativa)='' then begin
          Avisoerro('Campo de preenchimento obrigatório');
          exit;
        end;
        if length(trim(justificativa))<15 then begin
          Avisoerro('Minimo de 15 caracteres para justificativa');
          exit;
        end;
   ACBrNFe1.NotasFiscais.Clear;
   ACBrNFe1.NotasFiscais.LoadFromStream( TStringStream.Create( Q.fieldbyname('moes_xmlnfet').asstring ) );
   if Q.fieldbyname('moes_numerodoc').asinteger<>ACBrNFe1.NotasFiscais.Items[0].NFe.Ide.nNF then begin
      Avisoerro('NFe escolhida '+inttostr(Q.fieldbyname('moes_numerodoc').asinteger)+
                'NFe para cancelamento '+inttostr(ACBrNFe1.NotasFiscais.Items[0].NFe.Ide.nNF) );
      exit;
   end;
   PCartacorrecao.Visible:=true;
   PCartacorrecao1.Visible:=true;

///////////////////////////////////  por evento a
        if ( Global.Topicos[1033] ) then begin

          idLote := inttostr( GetSequencia('CancNFe'+EdUnid_codigo.text,true) );
//          if not(InputQuery('Cancelamento por Eventos: Cancelamento', 'Identificador de controle do Lote de envio do Evento', idLote)) then
//             exit;
//          if not(InputQuery('Cancelamento por Eventos: Cancelamento', 'Justificativa', vAux)) then
//             exit;
//          if length(trim(vaux))<15 then begin
//             Avisoerro('Mínimo de 15 caracteres para justificativa');
//             exit;
//          end;
          ACBrNFe1.EventoNFe.Evento.Clear;
          ACBrNFe1.EventoNFe.idLote := StrToInt(idLote) ;
          with ACBrNFe1.EventoNFe.Evento.Add do
          begin
//           infEvento.dhEvento := now;
//           infEvento.dhEvento := Sistema.hoje;
// 30.04.13 - sefa MT
           infEvento.dhEvento := Sistema.Hoje+Time();
           infEvento.tpEvento := teCancelamento;
           infEvento.detEvento.xJust := justificativa;
           InfEvento.CNPJ:=ACBrNFe1.NotasFiscais.Items[0].NFe.Emit.CNPJCPF;
//////////           InfEvento.tpAmb:=acbrnfe1.Configuracoes.WebServices.Ambiente;
           if FGeral.GetConfig1AsString('AmbienteNFe')='1' then
             InfEvento.tpAmb:=taProducao
           else
             InfEvento.tpAmb:=taHomologacao;

//           InfEvento.chNFe:=copy(ACBrNFe1.NotasFiscais.Items[0].NFe.infNFe.ID,3,44);
// deixado o componente colocar
//           InfEvento.cOrgao:=91;  // ambiente nacional ou 91 ??
//           InfEvento.cOrgao:=strtoint( copy(ACBrNFe1.NotasFiscais.Items[0].NFe.infNFe.ID,4,2) );
          end;
          Sistema.BeginProcess('Enviando Evento de Cancelamento');
//          try

            ACBrNFe1.EnviarEventoNFe(StrToInt(idLote));

//          except
//            Aviso('Problemas ao enviar o evento');
//          end;
            if ACBrNFe1.WebServices.EnvEvento<>nil then begin
            with ACBrNFe1.WebServices.EnvEvento do begin
              if EventoRetorno<>nil then begin
                if EventoRetorno.retEvento.Count>0 then begin
                  if EventoRetorno.retEvento.Items[0].RetInfEvento.cStat <> 135 then
                  begin
                    raise Exception.CreateFmt(
                      'Ocorreu o seguinte erro ao cancelar a nota fiscal eletrônica:'  + sLineBreak +
                      'Código:%d' + sLineBreak +
                      'Motivo: %s', [
                        EventoRetorno.retEvento.Items[0].RetInfEvento.cStat,
                        EventoRetorno.retEvento.Items[0].RetInfEvento.xMotivo
                    ]);
                  end;
                end else Avisoerro('Sem evento de retorno');
              end else Avisoerro('Sem retorno');
            end;
            end else Avisoerro('Sem comunicação');

            MemoResp.Lines.Text :=  UTF8Encode(ACBrNFe1.WebServices.EnvEvento.RetWS);
            memoRespWS.Lines.Text :=  UTF8Encode(ACBrNFe1.WebServices.EnvEvento.RetornoWS);
            cretorno:=IntToStr(ACBrNFe1.WebServices.EnvEvento.cStat)+'-'+FExpNfetxt.GetTag('xMotivo',MemoResp.Lines.Text);
  //          LoadXML(MemoResp, WBResposta);
            ShowMessage('Retorno='+cretorno);
  //          ShowMessage('cStat='+IntToStr(ACBrNFe1.WebServices.EnvEvento.cStat));
//            ShowMessage('Nprot='+ACBrNFe1.WebServices.EnvEvento.EventoRetorno.retEvento.Items[0].RetInfEvento.nProt);
//          except
//            Aviso('Problemas ao enviar o evento');
//          end;
        end else begin
/////////////////////////////////////
          Sistema.BeginProcess('Enviando Cancelamento');
          arqxml:= ExtractFilePath( Application.ExeName )+'CancelaNF'+Q.fieldbyname('moes_numerodoc').asstring+'.TXT';
          ListaXML:=TStringList.Create;
  //        ListaXML.Append(Q.fieldbyname('moes_xmlnfe').asstring);
          ListaXML.Append(Q.fieldbyname('moes_xmlnfet').asstring);
          ListaXml.SaveToFile(arqxml);
          AcbrNfe1.NotasFiscais.Clear;
          AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
            Sistema.BeginProcess('Cancelando usando pasta '+AcbrNfe1.Configuracoes.Geral.PathSalvar );
            AcbrNfe1.Cancelamento( Ups(justificativa) );
            Sistema.BeginProcess('Consultando chave');
            ACBrNFe1.WebServices.Consulta.NFeChave := FExpNfetxt.GetTag('chNFe', ACBRNfe1.NotasFiscais.Items[0].XML );
  //          arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.GetPathCan+'\'+ACBrNFe1.WebServices.Consulta.NFeChave+'-can.XML';
  // 15.03.10 - Asatec no c:
            arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.PathCan+'\'+ACBrNFe1.WebServices.Consulta.NFeChave+'-can.XML';
            if not FileExists(arqxmlretorno) then begin
              Avisoerro('Arquivo XML de retorno não encontrado:'+arqxmlretorno);
              Sistema.EndProcess('Banco de dados não atualizado');
              exit;
            end;
            ListaXML.Clear;
            Sistema.BeginProcess('Lendo XML de retorno');
            ListaXml.LoadFromFile(arqxmlretorno);
            Grid.Cells[Grid.GetColumn('retornows'),Grid.row]:='Nfe Cancelada na Sefa';
            cretorno:=ListaXml.Strings[0];
        end;

        Sistema.BeginProcess('Atualizando o banco de dados');
        Sistema.Edit('movesto');
//        if pos(uppercase('Cancelamento de NF-e homologado'),uppercase(cretorno))>0 then begin
// 01.04.13 - Damama--PR finalmente cancelamento por evento...
        if pos(uppercase( 'processado'),uppercase(cretorno))>0 then begin
           Sistema.setfield('moes_dtnfecanc',Sistema.hoje);
           if ( Global.Topicos[1033] ) then begin
             Sistema.setfield('moes_retornonfe',copy(cretorno,1,150));
             Sistema.setfield('Moes_Usua_CancNfe',Global.Usuario.Codigo);
             Sistema.setfield('moes_xmlnfecanc',memoRespWS.Lines.Text) ;
           end else begin
             Sistema.setfield('moes_xmlnfecanc',ListaXml.Strings[0]) ;
             Sistema.setfield('moes_retornonfe','Cancelamento de NF-e homologado');
             Sistema.setfield('Moes_Usua_CancNfe',Global.Usuario.Codigo);
             Listaxml.Free;
           end;
        end;
        Sistema.setfield('moes_devolucoes',Justificativa);
        Sistema.Post('moes_transacao='+stringtosql(ct));
        if ( trim(justificativa)<>'' ) and
//           ( pos(uppercase('Cancelamento de NF-e homologado'),uppercase(cretorno))>0 ) then
           (  pos(uppercase( 'processado'),uppercase(cretorno))>0 ) then
          Sistema.Commit
        else
          Avisoerro('Verificar.  Banco de dados não atualizado');
        Sistema.EndProcess('Processamento Terminado');

      end;
   end;
   FGeral.FechaQuery(Q);
end;

procedure TFGerenciaNfe.binutilizaClick(Sender: TObject);
begin
//  if EdUNid_codigo.isempty then EdUnid_codigo.text:=Global.CodigoUnidade;
  EdUNid_codigo.ValidFind;
  EdUNid_codigo.Valid;
  EdNUmeroi.Enabled:=true;
  EdNUmeroi.setfocus;
end;

procedure TFGerenciaNfe.EdNumeroiExitEdit(Sender: TObject);
begin
  EdNUmeroi.Enabled:=false;

end;

procedure TFGerenciaNfe.EdNumeroiValidate(Sender: TObject);
///////////////////////////////////////////////////////////////
var justificativa,arqxmlretorno,cretorno,x:string;
    ListaXML:TStringList;
    p:integer;
begin
// 01.03.12
   try
     x:=ACBrNFe1.Configuracoes.Certificados.GetCertificado.SubjectName;
   except
     Avisoerro('Não encontrado certificado digital');
     exit;
   end;
   if not confirma('Confirma inutilização desta numeração ?') then exit;
   if not Input('Justificativa','Motivo Cancelamento',justificativa,150,true) then exit;
  if trim(justificativa)='' then begin
    Avisoerro('Campo de preenchimento obrigatório');
    exit;
  end;
  if length(trim(justificativa))<15 then begin
    Avisoerro('Minimo de 15 caracteres para justificativa');
    exit;
  end;
  Sistema.BeginProcess('Enviando inutilização para Sefa');

//////////////////////////  InutilizaNumero( EdNumeroi.AsInteger );

  arqxmlretorno:='';
///////////////////////////////////
  try
//////
    ACBrNFe1.WebServices.Inutiliza(EdUnid_codigo.resultfind.fieldbyname('unid_cnpj').asstring,
    Justificativa,Datetoano(sistema.Hoje,true),55,1, EdNUmeroi.asinteger, EdNUmeroi.asinteger);
//////
    ListaArquivos.Items.Clear;
    ListaArquivos.FileName:=AcbrNfe1.Configuracoes.Arquivos.PathInu;
    ListaArquivos.Update;
    ListaXML:=TStringList.Create;
    for p:=0 to ListaArquivos.Items.Count-1 do begin
       if ( ansipos( uppercase('inu'),uppercase(ListaArquivos.Items.Strings[p]) ) > 0  ) and
          ( ansipos( strzero(EdNumeroi.Asinteger,6),ListaArquivos.Items.Strings[p] ) > 0  ) and
          ( ansipos( uppercase('ped'),uppercase(ListaArquivos.Items.Strings[p]) ) = 0  ) then begin
// 14.04.11
         arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.PathInu+'\'+ListaArquivos.Items.Strings[p];
         ListaXml.LoadFromFile(arqxmlretorno);
         cretorno:=FExpNfetxt.GetTag('xMotivo',ListaXml.Strings[0]);
         if trim(cretorno)<>'' then break;
       end;
    end;
/////////////////////////////////////
    if not FileExists(arqxmlretorno) then begin
      Sistema.EndProcess('Arquivo XML de retorno não encontrado em : '+arqxmlretorno);
    end else begin
//      cretorno:=FExpNfetxt.GetTag('xMotivo',ListaXml.Strings[0]);
// 14.04.11
      if trim(cretorno)='' then
        Sistema.EndProcess('Tag xMotivo não encontrada no arquivo '+arqxmlretorno)
      else begin
////////////////////////////////////////
        Sistema.EndProcess(cretorno);
// 07.11.13  - marcar com status 'I' numero de documento de saida com xml e data de autorizacao
//             para identificar nos relatorios mas nao enviar no sintegra
        Sistema.BeginProcess('gravando');
        InutilizaNumero( EdNumeroi.AsInteger );
      end;
      ListaXML.Free;
    end;
  except
    ListaArquivos.Items.Clear;
//    ListaArquivos.FileName:=AcbrNfe1.Configuracoes.Arquivos.GetPathInu;
    ListaArquivos.FileName:=AcbrNfe1.Configuracoes.Arquivos.PathInu;
    ListaArquivos.Update;
    ListaXML:=TStringList.Create;
    for p:=0 to ListaArquivos.Items.Count-1 do begin
       if ( ansipos( uppercase('inu'),uppercase(ListaArquivos.Items.Strings[p]) ) > 0  ) and
          ( ansipos( strzero(EdNumeroi.Asinteger,6),ListaArquivos.Items.Strings[p] ) > 0  ) and
          ( ansipos( uppercase('ped'),uppercase(ListaArquivos.Items.Strings[p]) ) = 0  ) then begin
  //      arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.GetPathInu+'\'+ACBrNFe1.WebServices.Consulta.NFeChave+'-inu.XML';
//         arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.GetPathInu+'\'+ListaArquivos.Items.Strings[p];
         arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.PathInu+'\'+ListaArquivos.Items.Strings[p];
         ListaXml.LoadFromFile(arqxmlretorno);
         cretorno:=FExpNfetxt.GetTag('xMotivo',ListaXml.Strings[0]);
         if trim(cretorno)<>'' then break;
      end;
    end;
    if not FileExists(arqxmlretorno) then begin
      Sistema.EndProcess('Atenção.  Arquivo XML de retorno não encontrado em : '+arqxmlretorno);
    end else begin
//      ListaXML:=TStringList.Create;
//      ListaXml.LoadFromFile(arqxmlretorno);
//      cretorno:=FExpNfetxt.GetTag('xMotivo',ListaXml.Strings[0]);
      if trim(cretorno)='' then
        Sistema.EndProcess('Tag xMotivo não encontrada no arquivo '+arqxmlretorno)
      else
        Sistema.EndProcess(cretorno);
      ListaXML.Free;
    end;
  end;
////////////////////////////////////////

end;

/////////////////////////////////////////////////////////
procedure TFGerenciaNfe.Enviaemail(xtrans:string='');
/////////////////////////////////////////////////////////
var ct,arqxml,emailDestino,temxmltext,caminhoxml,emaildestino1,emailsdestino:string;
    Q:TSqlquery;
    ListaXml:TStringList;
    CorpoEmail:TStringList;

begin

   if trim(fGeral.GetConfig1AsString('EMAILORIGEM'))='' then begin
     Avisoerro('Configurar todos os dados referente email nas config. gerais');
     exit;
   end;
   if ( FGeral.EmailStmpcomSSL( fGeral.GetConfig1AsString('EMAILORIGEM'))  ) and ( FGeral.SemDllsSmtp ) then begin
     Avisoerro('Email '+fGeral.GetConfig1AsString('EMAILORIGEM')+' usa SSL; faltam 3 arquivos com extensão .dll');
     exit;
   end;
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
// 06.07.11
   if xtrans<>'' then ct:=xtrans;
   temxmltext:='N';
// 14.09.11
   campo:=Sistema.GetDicionario('movesto','moes_xmlnfet');
   if campo.Tipo<>'' then begin
     temxmltext:='S';
     Q:=Sqltoquery('select moes_xmlnfe,moes_xmlnfet,moes_numerodoc,moes_dataemissao,moes_transacao,moes_tipo_codigo,moes_tipocad,moes_protodpec,moes_dtnfeauto,moes_dtnfecanc'+
                 ' from movesto where moes_transacao='+Stringtosql(ct)+
                 ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''');

   end else
     Q:=Sqltoquery('select moes_xmlnfe,moes_numerodoc,moes_dataemissao,moes_transacao,moes_tipo_codigo,moes_tipocad,moes_protodpec,moes_dtnfeauto,moes_dtnfecanc'+
                 ' from movesto where moes_transacao='+Stringtosql(ct)+
                 ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''');
   CorpoEmail:=TStringList.Create;
   arqxml:='EmailDanfe.text';
//Pedir na hora..
   if not Q.eof then begin
     //checar se autorizada
      if trim(Q.fieldbyname('moes_xmlnfe').asstring)='' then begin
        Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' sem XML gravado');
        exit;
//dpec
      end else if FExpNfetxt.GetTag('tpemis',Q.fieldbyname('moes_xmlnfe').asstring)='4' then begin
        if trim(Q.fieldbyname('moes_protodpec').asstring)='' then begin
          Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' sem Protocolo de Envio ao DPEC');
          exit;
        end;
      end else if DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)<=1900 then begin
          Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' aind não foi autorizada');
          exit;
      end else if DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)>1900 then begin
        Avisoerro('NFe ref. Transação '+ct+' foi cancelada na Sefa');
        exit;
      end;
     //buscar email cadastro clientes..
//     emaildestino:=FGeral.GetEmailEntidade(Q.fieldbyname('moes_tipo_codigo').AsInteger,Q.fieldbyname('moes_tipocad').asstring);
// 30.05.14
     emailsdestino:=FGeral.GetEmailEntidade(Q.fieldbyname('moes_tipo_codigo').AsInteger,Q.fieldbyname('moes_tipocad').asstring,'S');
     emaildestino:='';emaildestino1:='';
     if pos(';',emailsdestino)>0 then begin
       emaildestino:=copy(emailsdestino,1,pos(';',emailsdestino)-1);
       emaildestino1:=copy(emailsdestino,pos(';',emailsdestino)+1,60);
     end;
     if trim(emaildestino)='' then begin
       if not Input('Destinatário de e-mail','E-Mail',emaildestino,0,False)  or (emaildestino='') then exit;
     end;

       CorpoEmail.Add(  'Anexo XML da NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime) );
// 29.03.10
       CorpoEmail.Add(  ' ' );
       CorpoEmail.Add(  ' ' );
       CorpoEmail.Add(  EdUnid_codigo.resultfind.fieldbyname('unid_razaosocial').AsString );
       CorpoEmail.Add(  FGeral.Formatacnpj( EdUnid_codigo.resultfind.fieldbyname('Unid_cnpj').AsString ) );
       CorpoEmail.Add(  EdUnid_codigo.resultfind.fieldbyname('Unid_endereco').AsString );
       CorpoEmail.Add(  EdUnid_codigo.resultfind.fieldbyname('Unid_bairro').AsString+' - '+
                        EdUnid_codigo.resultfind.fieldbyname('Unid_municipio').AsString  );
       CorpoEmail.Add(  FGeral.Formatatelefone( EdUnid_codigo.resultfind.fieldbyname('Unid_fone').AsString ) );
       CorpoEmail.Add(  EdUnid_codigo.resultfind.fieldbyname('Unid_email').AsString );

       Listaxml:=TStringList.Create;
       ListaXML.Append( GetQualXml(Q,temxmltext) );
       ListaXML.SaveToFile(arqxml);
       ACBrNFe1.NotasFiscais.Clear;
       AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
// 14.09.11
       if AcbrNfe1.NotasFiscais.Count=0 then
         Avisoerro('Problemas ao ler o arquivo '+arqxml+' desta nota');

       Sistema.BeginProcess('Enviando email');

       try
         if Global.Topicos[1019] then begin // usar cliente de email padrao...

//     AcBrNfe1.Configuracoes.Arquivos.PathNFe+'\'+inttostr(ACBrNFe1.NotasFiscais.Items[i].NFe.Ide.cNF)+FGeral.TiraBarra( Datetostr(ACBrNFe1.NotasFiscais.Items[0].NFe.Ide.dEmi) )+'-NFe.xml';
//           FGeral.EmailClientePadrao(emaildestino,'XML NFe',FGeral.GetConfig1AsString('Pastaexpnfexml'),CorpoEmail);
           caminhoxml:=FGeral.GetConfig1AsString('Pastaexpnfexml')+'\'+copy(ACBRNfe1.NotasFiscais.Items[0].NFe.infNFe.ID,4,44)+'-NFe.xml';
           FGeral.EmailClientePadrao(emaildestino,'XML NFe',caminhoxml,CorpoEmail);

         end else if Global.Topicos[1012] then begin

// desta forma com true envia tbem o danfe em pdf
           if FGeral.EmailStmpcomSSL( FGeral.GetConfig1AsString('EMAILORIGEM') ) then
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,true,true)
           else
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,false,true);
// 30.05.14
           if trim(emaildestino1)<>'' then
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino1,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,false,true);
         end else  begin
//           ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.Smtp.Port),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino,'XML NFe',CorpoEmail,true,false);
           if FGeral.EmailStmpcomSSL( FGeral.GetConfig1AsString('EMAILORIGEM') ) then
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,True,false)
           else
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,false,false);
// 30.05.14 - Novicarnes
           if trim(emaildestino1)<>'' then
             ACBrNFe1.NotasFiscais.Items[0].EnviarEmail( FGeral.GetConfig1AsString('SMTP'),inttostr(FGeral.GetConfig1AsInteger('PORTASMTP')),FGeral.GetConfig1AsString('USUARIOSMTP'),FGeral.GetConfig1AsString('SENHASMTP'),FGeral.GetConfig1AsString('EMAILORIGEM'),emaildestino1,'XML NFe '+Q.fieldbyname('moes_numerodoc').asstring+
                        ' emitida em '+FGeral.FormataData(Q.fieldbyname('moes_dataemissao').asdatetime),CorpoEmail,false,false);
         end;
//           FGeral.EnviaEMail(emaildestino,'XML NFe','',CorpoEmail);
         Sistema.EndProcess('Email enviado.');
       except
         Sistema.EndProcess('Email não enviado.  Checar configuração do email '+FGeral.GetConfig1AsString('EMAILORIGEM')+
                             ' SMTP '+FGeral.GetConfig1AsString('SMTP'));
       end;
  //    FGeral.EnviaEMail('andre@tokefinal.com.br','XML Nfe numero '+Q.fieldbyname('moes_numerodoc').asstring,Q.fieldbyname('moes_xmlnfe').asstring,corpoemail)
       ACBrNFe1.NotasFiscais.Clear;

   end;
   CorpoEmail.Clear;
   FGeral.FechaQuery(Q);

end;

procedure TFGerenciaNfe.bconsultasefaClick(Sender: TObject);
/////////////////////////////////////////////////////////////////
var ct,ct1:string;
    Q,QNfe:TSqlquery;
    ListaXML:TStringList;
    arqxml,cretorno,ctransacao,arqxmlretorno:string;
    marc,i:integer;
begin
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   marc:=0;
   ct1:='';
   for i:=0 to Grid.rowcount do begin
     if Grid.Cells[Grid.getcolumn('marcado'),i]='OK' then begin
       inc(marc);
       ct1:=ct1+Grid.Cells[Grid.getcolumn('moes_transacao'),i]+';';
     end;
   end;
   if ct1<>'' then ct:=ct1;
//   Q:=Sqltoquery('select moes_xmlnfe,moes_dtnfeauto from movesto where moes_transacao='+Stringtosql(ct)+
   Q:=Sqltoquery('select moes_xmlnfe,moes_dtnfeauto,moes_transacao,moes_dtnfecanc,moes_protodpec,moes_numerodoc,moes_chavenfe,moes_nfeexp from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C''');

   AcbrNfe1.NotasFiscais.Clear;
   ListaXML:=TStringList.Create;
   arqxml:='ConsultaNFe.txt';
   while not Q.eof do begin
// gravar somente as q foram enviadas mas sem retorno da autorização
//      if ( trim(Q.fieldbyname('moes_xmlnfe').asstring)<>'' ) and
      if ( trim(Q.fieldbyname('moes_xmlnfe').asstring)='' ) and
// 16.12.09 - quando nao dá retorno o xml nao fica gravado no banco
         ( trim(Q.fieldbyname('moes_chavenfe').AsString)='' ) and
         ( Datetoano(Q.fieldbyname('moes_dtnfeauto').AsDatetime,true)<1920 ) and
         (  Q.fieldbyname('moes_nfeexp').asstring='S' )
        then begin
//        Avisoerro('Transação '+Q.fieldbyname('moes_transacao').asstring+' sem XML gravado')
        ListaXML.Clear;
        ListaXML.Append(Q.fieldbyname('moes_xmlnfe').asstring);
        ListaXml.SaveToFile(arqxml);
        AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
      end;
      Q.Next;
   end;
   if AcbrNfe1.NotasFiscais.Count>0 then begin
     AcbrNfe1.NotasFiscais.GerarNFe;
     AcbrNfe1.NotasFiscais.Assinar;
     AcbrNfe1.NotasFiscais.Valida;
     for i:=0 to AcbrNfe1.NotasFiscais.Count-1 do begin
//       ACBrNFe1.WebServices.Consulta.NFeChave := FExpNfetxt.GetTag('chNFe', ACBRNfe1.NotasFiscais.Items[i].XML );
// tiro o 'NFe' inicial do ID para ir somente os 44 digitos
       ACBrNFe1.WebServices.Consulta.NFeChave := copy(ACBRNfe1.NotasFiscais.Items[i].NFe.infNFe.ID,4,44) ;
       ACBrNFe1.WebServices.Consulta.Executar;

//       arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.GetPathCan+'\'+ACBrNFe1.WebServices.Consulta.NFeChave+'-sit.XML';
//   15.03.10
       arqxmlretorno:=AcbrNfe1.Configuracoes.Arquivos.PathCan+'\'+ACBrNFe1.WebServices.Consulta.NFeChave+'-sit.XML';
       if not FileExists(arqxmlretorno) then begin
            Avisoerro('Arquivo XML de retorno não encontrado:'+arqxmlretorno);
            Sistema.EndProcess('Banco de dados não atualizado');
            exit;
       end;
       ListaXML.Clear;
       ListaXml.LoadFromFile(arqxmlretorno);
// pois nao precisa mostrar o numero da nfe...
//       cretorno:=copy(FExpNfetxt.GetRetorno( ListaXml.Strings[0] ),53,40) ;
       cretorno:= TrataRetornoXMotivo( ListaXml.Strings[0]  ) ;
       AtualizaGrid( ACBrNFe1.NotasFiscais.Items[i].NFe.Ide.nNF,cretorno );
       ctransacao:=FExpNfetxt.GetGridTransacao(ACBrNFe1.NotasFiscais.Items[i].NFe.Ide.nNF);
//{
       if ( trim(ctransacao)<>'' ) and
             ( trim(cretorno)<>'' )   and
             ( pos('ENCONTRADO',UPpercase(cretorno))=0 )
             then begin
             QNfe:=Sqltoquery('select moes_dtnfeauto,moes_chavenfe from movesto where moes_transacao='+Stringtosql(Trim(ctransacao))+
                              ' and moes_status<>''C''' );

             Sistema.edit('movesto');
             if pos('AUTORIZADA',uppercase(cretorno))>0 then begin
               Sistema.setfield('moes_dtnfeauto',Sistema.hoje);
               Sistema.setfield('moes_xmlnfe',ACBrNFe1.NotasFiscais.Items[i].XML) ;
               Sistema.setfield('moes_chavenfe',ACBrNFe1.NotasFiscais.Items[i].NFe.procNFe.chNFe);
             end;
             if trim(cretorno)<>'' then begin
               if Datetoano(QNfe.fieldbyname('moes_dtnfeauto').AsDatetime,true) <= 1920 then begin
                 Sistema.setfield('moes_retornonfe',cretorno);
                 Sistema.setfield('moes_dtnfereto',Sistema.hoje);
               end;
             end;
             Sistema.Post('moes_transacao='+stringtosql(ctransacao));
             FGeral.FechaQuery(QNfe);
       end;
//          }
     end;

   end;
   FGeral.FechaQuery(Q);

end;

procedure TFGerenciaNfe.AtualizaGrid(nf: integer; xretorno: string);
var i:integer;
begin
  for i:=1 to Grid.RowCount do begin
     if strtointdef(Grid.Cells[Grid.getcolumn('moes_numerodoc'),i],0) = nf then begin
        Grid.Cells[Grid.getcolumn('retornows'),i]:=xretorno;
        break;
     end;
  end;

end;

function TFGerenciaNfe.TrataRetornoXMotivo(StringXml:String): string;
const cautorizado:string='autorizado o uso de nf-e';
var protocolo,xmotivo:string;
begin
  if ansipos(Uppercase(cautorizado),Uppercase(StringXML))>0 then
    result:='NF-e Autorizada'
  else begin
    xmotivo:=FExpNfetxt.GetTag('xMotivo',StringXml);
    protocolo:=FExpNfetxt.GetTag('nProt',StringXml);
    if trim(protocolo)<>'' then
      result:='NF-e Autorizada'
    else if trim(xmotivo)<>'' then begin
      if pos('consta na base de dados da SEFAZ',xmotivo)>0 then
        result:=copy(xmotivo,53,40)
      else
        result:=xmotivo;
    end else
      result:=FExpNfetxt.GetRetorno( StringXML )  ;
  end;

end;

procedure TFGerenciaNfe.bimpdanfexmlClick(Sender: TObject);
var cretorno,t:string;
//    Str:TMemoryStream;

begin
  if not FileExists(arquivorave) then begin
     Avisoerro('Arquivo .RAV não encontrado');
     exit;
  end;
  if not OPendialog1.Execute then exit;
  AcbrNfe1.NotasFiscais.Clear;
  try
    AcbrNfe1.NotasFiscais.LoadFromFile( OPendialog1.FileName );
  except
    Avisoerro('Não foi possível ler o arquivo '+OPendialog1.FileName);
    exit;
  end;
  cretorno:=FExpNfetxt.GetTag('xMotivo',AcbrNfe1.NotasFiscais.Items[0].XML);
//  if pos('AUTORIZADO O USO DE',uppercase(cretorno))=0 then
// 02.02.10 - nfe de SP vem com 'autorizado o uso da'...
  if ( pos('AUTORIZADO O USO',uppercase(cretorno))=0 ) and ( not (Global.Usuario.OutrosAcessos[0330]) ) then
    Avisoerro('XML não autorizado pela Sefa')
  else begin
    Printer.PrinterIndex := ComboBox1.ItemIndex;
    ACBrNFeDANFERave1.Impressora:=Combobox1.Items.Strings[ComboBox1.ItemIndex];
//     if FGeral.GetConfig1AsInteger('copiasdanfe')>0 then
//       PrintDialogBoleto.Copies:=FGeral.GetConfig1AsInteger('copiasdanfe');
//     if not PrintDialogBoleto.Execute then exit;
    PrintDialogBoleto.Copies:=1;
    ACBrNFeDANFERave1.NumCopias:=1;
    AcbrNfe1.DANFE.NumCopias:=1;
//    AcbrNfe1.NotasFiscais.Imprimir ;

// 26.11.12
    if Global.Topicos[1358] then begin
       ACBrNFeDANFERave1.ImprimirDANFE( ACBrNFe1.NotasFiscais.Items[0].NFe );
      if not confirma('Importar XML nas saidas ?') then exit;
      FGeral.GravaNotacomxml( ACBrNFe1 ,OPendialog1.FileName );
    end else
       ACBrNFeDANFERave1.ImprimirDANFE( ACBrNFe1.NotasFiscais.Items[0].NFe );


  end;

end;

procedure TFGerenciaNfe.EdUnid_codigoValidate(Sender: TObject);
begin
// 02.07.10 - emitente em outro estado que nao seja PR
  if trim(EdUNid_codigo.resultfind.fieldbyname('unid_uf').AsString)<>'' then
    ACBrNFe1.Configuracoes.WebServices.UF:=EdUNid_codigo.resultfind.fieldbyname('unid_uf').AsString;


end;

function TFGerenciaNfe.GetQualXml(Q:TSqlquery;temcampo:string): string;
/////////////////////////////////////////////////////////////////
begin
  {
  campo:=Sistema.GetDicionario('movesto','moes_xmlnfet');
  if campo.Tipo<>'' then
    result:='moes_xmlnfet'
  else
    result:='moes_xmlnfe';
    }
//

  if temcampo='S' then begin
    if trim(Q.fieldbyname('moes_xmlnfet').asstring)='' then
      result:=Q.fieldbyname('moes_xmlnfe').asstring
    else
      result:=Q.fieldbyname('moes_xmlnfet').asstring
  end else
    result:=Q.fieldbyname('moes_xmlnfe').asstring;

  if temcampo='X' then result:=Q.fieldbyname('moes_xmlnfecanc').asstring
end;

procedure TFGerenciaNfe.EdUnid_codigoKeyPress(Sender: TObject;
  var Key: Char);
begin
   FGeral.LimpaEdit(EdUnid_codigo,key);
end;

procedure TFGerenciaNfe.bemailClick(Sender: TObject);
begin
   PCartacorrecao.Visible:=false;
   PCartacorrecao1.Visible:=false;
   EnviaEmail;
end;

//  28.06.12
procedure TFGerenciaNfe.bcartacorrecaoClick(Sender: TObject);
//////////////////////////////////////////////////////////////
var ct,codigosdesti,chave,idlote,codorgao,cnpj,nseqevento,correcao:string;
begin

   if Grid.Cells[Grid.GetColumn('marcado'),Grid.row]<>'OK' then exit;

   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   codigosdesti:=Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),Grid.row];
   Q:=Sqltoquery('select moes_xmlnfe,moes_xmlnfet,moes_dtnfeauto,moes_transacao,moes_dtnfecanc,moes_protodpec,moes_numerodoc,moes_chavenfe,moes_tipocad from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                ' and moes_status<>''C'' order by moes_numerodoc');
   if Q.eof then begin
     Avisoerro('Nada encontrado para envio.  Checar nota');
     exit;
   end;
   chave:=Q.fieldbyname('moes_chavenfe').asstring;
   if trim(chave)='' then begin
     Avisoerro('Nota sem chave da NFe.   Verificar');
     exit;
   end;
   if Acbrnfe1.Configuracoes.Certificados.DataVenc < Sistema.Hoje then begin
     Avisoerro('Certificado digital em uso vencido em '+Fgeral.FormataData(Acbrnfe1.Configuracoes.Certificados.DataVenc));
     exit;
   end;
   PCartacorrecao.Visible:=true;
   PCartacorrecao1.Visible:=true;
   idLote := inttostr( FGEral.GetContador('LOTECCE'+EdUnid_codigo.text,false) );
   codOrgao := copy(Chave,1,2);
   CNPJ := copy(Chave,7,14);
   nSeqEvento := '1';
//   Correcao := 'Correção a ser considerada, texto livre. A correção mais recente substitui as anteriores.';
   Correcao := space(100);
   if not(InputQuery('Envio de Carta de Correção', 'Correção a ser considerada', Correcao)) then
      exit;
// 02.10.2012 - Clessi
   if not(InputQuery('Evento da Carta de Correção', 'Sequencia de Correção dentro da mesma NF-e', nSeqEvento)) then
      exit;
   ACBrNFe1.CartaCorrecao.CCe.Evento.Clear;
   ACBrNFe1.CartaCorrecao.CCe.idLote := StrToInt(idLote) ;
   with ACBrNFe1.CartaCorrecao.CCe.Evento.Add do
   begin
     infEvento.chNFe := Chave;
     infEvento.cOrgao := StrToInt(codOrgao);
//     if Q.FieldByName('moes_tipocad').asstring='C' then begin
//       if length(trim(Q.fieldbyname('clie_cnpjcpf').asstring))<14 then
//         infEvento.CPF   := CNPJ
//       else
//         infEvento.CNPJ   := CNPJ;
//     end else
       infEvento.CNPJ   := CNPJ;
     infEvento.dhEvento := now;
     infEvento.tpEvento := 110110;
     infEvento.nSeqEvento := StrToInt(nSeqEvento);
     infEvento.versaoEvento := '1.00';
     infEvento.detEvento.descEvento := 'Carta de Correção';
     infEvento.detEvento.xCorrecao := Correcao;
     infEvento.detEvento.xCondUso := ''; //Texto fixo conforme NT 2011.003 -  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=tsiloeZ6vBw=
//     infEvento.detEvento.xCondUso :='A Carta de Correcao e disciplinada pelo paragrafo 1o-A do art.'+
//                                    '7o do Convenio S/N, de 15 de dezembro de 1970 e pode ser utilizada '+
//                                    'para regularizacao de erro ocorrido na emissao de documento fiscal, '+
//                                    'desde que o erro nao esteja relacionado com: I - as variaveis que determinam '+
//                                    'o valor do imposto tais como: base de calculo, aliquota, diferenca de preco, '+
//                                    'quantidade, valor da operacao ou da prestacao; II - a correcao de dados cadastrais '+
//                                    'que implique mudanca do remetente ou do destinatario; III - a data de emissao ou de saida.';
     if FGeral.GetConfig1AsString('AmbienteNFe')='1' then
       InfEvento.tpAmb:=taProducao
     else
       InfEvento.tpAmb:=taHomologacao;
     infEvento.detEvento.xCorrecao := Correcao;

   end;
   Sistema.BeginProcess('Enviando carta de correção para Sefa');
   try
     ACBrNFe1.EnviarCartaCorrecao(StrToInt(idLote));
   finally
//     MemoResp.Lines.Text := UTF8Encode(ACBrNFe1.WebServices.CartaCorrecao.RetWS);
//     memoRespWS.Lines.Text := UTF8Encode(ACBrNFe1.WebServices.CartaCorrecao.RetornoWS);
     MemoResp.Lines.Text := UTF8Encode(ACBrNFe1.WebServices.EnvEvento.RetWS);
     memoRespWS.Lines.Text := UTF8Encode(ACBrNFe1.WebServices.EnvEvento.RetornoWS);
   end;

//   Sistema.EndProcess( ACbrNfe1.WebServices.EnvEvento.CCeRetorno.xMotivo );
//   Sistema.EndProcess( ACbrNfe1.WebServices.EnvEvento.CCeRetorno.retEvento.Items[0].RetInfEvento.xMotivo );

//    Sistema.EndProcess( memoRespWS.Lines.Text );

//   MemoResp.Lines.SaveToFile((ExtractFileDir(application.ExeName))+'\CCe01'+IdLote+'.xml');
   MemoRespWs.Lines.SaveToFile((ExtractFileDir(application.ExeName))+'\CCeNF'+strzero(Q.fieldbyname('moes_numerodoc').asinteger,6)+IdLote+'.xml');
   Q.close;
// 10.07.14
   Sistema.Edit('movesto');
//   Sistema.SetField('moes_xmlcce',MemoRespWs.Lines.Text);
   Sistema.SetField('moes_xmlcce',MemoResp.Lines.Text);
   Sistema.SetField('moes_obs',Correcao);
   Sistema.Post('moes_transacao='+Stringtosql(ct));
   Sistema.Commit;
/////////////////

//   LoadXML(MemoResp, WBResposta);
//  MyMemo.Lines.SaveToFile(PathWithDelim(ExtractFileDir(application.ExeName))+'temp.xml');
//  MyWebBrowser.Navigate(PathWithDelim(ExtractFileDir(application.ExeName))+'temp.xml');

    Sistema.EndProcess( 'Cce enviada' );


end;

procedure TFGerenciaNfe.bgeraxmlClick(Sender: TObject);
//////////////////////////////////////////////////////////////
var ct,ct1,codigosdesti,codigosdesti1,temxmltext,campoxml,ondesalvar,arq,pastasaC,
    emailescritorio:string;
    marc,i:integer;
    todos:boolean;
    ListaAnexos:TStringList;
    CorpoEmailTexto:Tstrings;
begin
   todos:=Confirma('Gerar de todos do período <S> ou somente selecionados(ok)<N> ?');
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   codigosdesti:=Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),Grid.row];
   marc:=0;
   ct1:='';
   if not todos then begin
     for i:=0 to Grid.rowcount do begin
       if Grid.Cells[Grid.getcolumn('marcado'),i]='OK' then begin
         inc(marc);
         ct1:=ct1+Grid.Cells[Grid.getcolumn('moes_transacao'),i]+';';
         codigosdesti1:=codigosdesti1+Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),i]+';';
       end;
     end;
   end else begin
     for i:=0 to Grid.rowcount do begin
       if trim(Grid.Cells[Grid.getcolumn('moes_numerodoc'),i])<>'' then begin
         inc(marc);
         ct1:=ct1+Grid.Cells[Grid.getcolumn('moes_transacao'),i]+';';
         codigosdesti1:=codigosdesti1+Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),i]+';';
       end;
     end;
   end;
   if ct1<>'' then ct:=ct1;
   if trim(ct)='' then begin
      Avisoerro('Sem nota escolhida');
      exit;
   end;
   if trim(codigosdesti1)='' then begin
      Avisoerro('Sem cliente OU nota escolhida');
      exit;
   end;
   if codigosdesti1<>'' then codigosdesti:=codigosdesti1;
   campo:=Sistema.GetDicionario('movesto','moes_xmlnfet');
   temxmltext:='N';
   if campo.Tipo<>'' then begin
     temxmltext:='S';
     Q:=Sqltoquery('select * from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C'' order by moes_numerodoc')
   end else
     Q:=Sqltoquery('select * from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                 ' and moes_status<>''C'' order by moes_numerodoc');
{ //
   if trim(Q.fieldbyname('moes_xmlnfe').asstring)='' then begin
      Avisoerro('Transação '+ct+' sem XML gravado');
      exit;
   end else if FExpNfetxt.GetTag('tpemis',Q.fieldbyname('moes_xmlnfe').asstring)='2' then begin
     Aviso('Transação '+ct+' se ref. a nfe em contingência. Impressão de Danfe em form. segurança');
   end else if DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)<=1900 then begin
     Avisoerro('Transação '+ct+' aind não foi autorizada');
     exit;
   end else if DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)>1900 then begin
     Avisoerro('NFe ref. Transação '+ct+' foi cancelada na Sefa');
     exit;
   end;
}

   AcbrNfe1.NotasFiscais.Clear;
//   ListaXML:=TStringList.Create;
//   ListaTrans:=TStringList.Create;
   if Q.eof then begin
     Avisoerro('Nada encontrado para geração.  Checar notas');
     FGeral.FechaQuery(Q);
     exit;
   end;

  ondesalvar :=FGeral.GetConfig1AsString('Pastaexpnfexml')+'\'+
                strzero(Datetoano(Q.fieldbyname('moes_dataemissao').AsDateTime,true),4)+
                strzero(Datetomes(Q.fieldbyname('moes_dataemissao').AsDateTime),2);
//                '\Geradas';
  if not DirectoryExists( OndeSalvar  ) then
      ForceDirectories( OndeSalvar );

  ondesalvar:=ondesalvar+'\';
  Sistema.beginprocess('Gerando XML(s)');
  while not Q.eof do begin
//      Sistema.beginprocess('Gerando XML da nota '+strzero( Q.fieldbyname('moes_numerodoc').AsInteger ,6) );
      campoxml:='moes_xmlnfet';
      if trim(Q.fieldbyname('moes_xmlnfet').asstring)='' then
        campoxml:='moes_xmlnfe';
// autorizada e nao cancelada na sefa
      if ( DAtetoano(Q.fieldbyname('moes_dtnfeauto').asdatetime,true)>1900 ) and
         ( DAtetoano(Q.fieldbyname('moes_dtnfecanc').asdatetime,true)<=1900 ) then begin
//        ListaXML.Clear;
//        ListaXML.Append( GetQualXml(Q,temxmltext) );
//        ListaXml.SaveToFile(arqxml);
//        AcbrNfe1.NotasFiscais.LoadFromFile(arqxml);
        AcbrNfe1.NotasFiscais.LoadFromStream( TStringStream.create( GetQualXml(Q,temxmltext) ) );
//        ListaTrans.Add(Q.fieldbyname('moes_transacao').asstring);
      end;
      Q.Next;
  end;

   if AcbrNfe1.NotasFiscais.Count>0 then begin
     for i:= 0 to AcbrNfe1.NotasFiscais.Count-1 do begin
       if not FileExists( ondesalvar+copy(ACBrNFe1.NotasFiscais.Items[i].NFe.infNFe.id,4,44)+'-nfe.xml' ) then
         ACBrNFe1.NotasFiscais.Items[i].SaveToFile(ondesalvar+copy(ACBrNFe1.NotasFiscais.Items[i].NFe.infNFe.id,4,44)+'-nfe.xml');
//       AcbrNfe1.NotasFiscais.Items[i].SaveToFile(ondesalvar+'\XML_NFe_'+strzero( AcbrNfe1.NotasFiscais.Items[i].NFe.Ide.nNF ,6)+'.XML' );
     end;
//     Aviso(strzero(marc,3)+' arquivo(s) Xml(s) gerados em '+ondesalvar);
   end;
   FGeral.FechaQuery(Q);
   Sistema.EndProcess('');
   Arq:=strzero(Datetoano(EdTermino.AsDate,true),4)+
        strzero(Datetomes(EdTermino.AsDate),2)+'.rar';

//   if not FileExists( 'Winrar.exe' ) then begin
//   if ExtractFilePath( 'Winrar.exe' )  = '' then begin
//   if ExtractFileDir( 'Winrar.exe' )  = '' then begin
//   if ExtractFileDrive( 'Winrar.exe' )  = '' then begin
//     Sistema.EndProcess('Não encontrado o Winrar.exe');
//     exit;
//   end;


   ChDir( OndeSalvar  ) ;

   Sistema.BeginProcess('Gerando arquivo compactado em '+ondesalvar+Arq);
//   DeleteFile( ondesalvar+Arq );  // por enquanto nao precisa pois cria novamente com todos os xmls
// pega apenas os xml que começam por 4 ( 41, 42 )
   ShellExecute(0,nil,'Winrar.exe',  PChar ('a -ep -ibck "'+OndeSalvar+'"'+Arq+' 4*.xml' ), nil, sw_show);
   sleep(500);
   pastasac:='D:\SAC';
   if not FileExists( pastasac+'\Sac.exe' ) then
     pastasac:='C:\SAC'
   else if not FileExists( pastasac+'\Sac.exe' ) then
     pastasac:='E:\SAC';
   ChDir( pastasac  ) ;
   emailescritorio:=FGeral.GetConfig1AsString('emailcontador');
   ListaAnexos:=TStringList.create;
   if FileExists( ondesalvar+Arq ) then begin
     if trim(emailescritorio)='' then
       Input('Informe Destino','Email',emailescritorio,50,false);
     Sistema.EndProcess('Gerado arquivo compactado em '+ondesalvar+Arq);
     ListaAnexoS.add(ondesalvar+Arq);
     if trim(emailescritorio)<>'' then begin
       Sistema.BeginProcess('Enviando email para '+emailescritorio);
       CorpoEmailTexto:=TstringList.Create;
       CorpoEmailTexto.Add('Anexo arquivo '+ListaAnexos[0]);
       CorpoEmailTexto.Add('XMLs refente '+strzero(Datetomes(EdTermino.AsDate),2)+'/'+
                        strzero(Datetoano(EdTermino.AsDate,true),4) );

//       FRel.SendMail(emailescritorio,ListaAnexos,CorpoEmailTexto);
// 24.01.15
       FRel.SendMail(emailescritorio);
       Sistema.endprocess('');
       CorpoEmailTexto.free;
     end;

   end else
     Sistema.EndProcess('Problemas ao gerar o arquivo compactado.  Verificar !');
   ListaAnexos.free;
end;

// 07.11.13
procedure TFGerenciaNfe.InutilizaNumero(xNumero: Integer);
//////////////////////////////////////////////////////////////////
var Q:TSqlquery;
    sqldata:string;
begin
  sqldata:=' and moes_dataemissao >= '+Datetosql( Sistema.Hoje-45 );
  Q:=sqltoquery('select moes_transacao from movesto where moes_numerodoc='+inttostr(xnumero)+
                ' and moes_status<>''C'''+
                ' and ( (moes_dtnfeauto is null) or (moes_especie=''NFE'') )' +
// 10.09.14 - para nao inutilizar notas de serviço com mesma numeracao de nfe...
                ' and moes_serie='+Stringtosql(Global.SerieUnidade)+
                ' and moes_unid_codigo='+Stringtosql(Global.codigounidade)+
                sqldata+
                ' and '+FGeral.GetIN('moes_tipomov',Global.TiposRelVenda+';'+Global.TiposRelCompra,'C')
                );
  if not Q.eof then begin
//    Sistema.BeginTransaction('');
    Sistema.Edit('movesto');
    Sistema.SetField('moes_status','I');
    Sistema.SetField('moes_vlrtotal',0);
    Sistema.SetField('moes_baseicms',0);
    Sistema.SetField('moes_retornonfe','Numeração Inutilizada em '+FGeral.FormataData(sistema.Hoje));
    Sistema.Post('moes_transacao = '+Stringtosql(Q.fieldbyname('moes_transacao').asstring));

    Sistema.Edit('movestoque');
    Sistema.SetField('move_status','I');
    Sistema.SetField('move_venda',0);
    Sistema.SetField('move_qtde',0);
    Sistema.Post('move_transacao = '+Stringtosql(Q.fieldbyname('moes_transacao').asstring));

    Sistema.Edit('movbase');
    Sistema.SetField('movb_status','I');
    Sistema.SetField('movb_basecalculo',0);
    Sistema.Post('movb_transacao = '+Stringtosql(Q.fieldbyname('moes_transacao').asstring));

    Sistema.Edit('pendencias');
    Sistema.SetField('pend_status','I');
    Sistema.SetField('pend_valor',0);
    Sistema.Post('pend_transacao = '+Stringtosql(Q.fieldbyname('moes_transacao').asstring));
//    Sistema.EndTransaction('');

    Sistema.Commit;
  end else Aviso('Numeração não encontrada.   Caso tenha apenas pulado a numeração desconsidere este aviso.');
  Sistema.EndProcess('');
  FGeral.FechaQuery(Q);
// 08.11 - guardar 'algo' sobre nota inutilizada
   FGeral.GravaLog(27,'Numeração de NFe inutilizada '+EdNumeroi.text,true);

end;

//////////////////// 10.07.14
procedure TFGerenciaNfe.bimpcceClick(Sender: TObject);
///////////////////////////////////////////////////////////////
var ct,codigosdesti,chave,idlote,codorgao,cnpj,nseqevento,correcao:string;
begin
   ct:=Grid.Cells[Grid.GetColumn('moes_transacao'),Grid.row];
   codigosdesti:=Grid.Cells[Grid.GetColumn('moes_tipo_codigo'),Grid.row];
   Q:=Sqltoquery('select moes_xmlcce,moes_xmlnfet,moes_dtnfeauto,moes_transacao,moes_obs,moes_numerodoc,moes_chavenfe from movesto where '+
                 FGeral.GetIN('moes_transacao',ct,'C')+
                ' and '+FGeral.GetIN('moes_tipo_codigo',codigosdesti,'N')+
                ' and '+FGeral.GetNOtin('moes_tipomov',tiposnao,'C')+
                ' and moes_status<>''C'' order by moes_numerodoc');
   if Q.eof then begin
     Avisoerro('Nada encontrado para envio.  Checar nota');
     exit;
   end;
   chave:=Q.fieldbyname('moes_chavenfe').asstring;
   if trim(chave)='' then begin
     Avisoerro('Nota sem chave da NFe.   Verificar');
     exit;
   end;
   if trim(Q.fieldbyname('moes_xmlcce').AsString)='' then begin
     Avisoerro('Nota sem carta de correção gravada.   Verificar');
     exit;
   end;
   Acbrnfe1.DANFE:=AcbrNfeDanfeRaveCB1;
   ACBrNFeDANFERaveCB1.MostrarPreview := True;
   ACBrNFe1.NotasFiscais.Clear;
   ACBrNFe1.NotasFiscais.LoadFromString( Q.fieldbyname('moes_xmlnfet').AsString );
   ACBrNFe1.EventoNFe.Evento.Clear;
   codOrgao := copy(Chave,1,2);
   CNPJ := copy(Chave,7,14);
//   ACBrNFe1.EventoNFe.LerXMLFromString(Q.fieldbyname('moes_xmlcce').AsString);
// 24.03.15

//   with ACBrNFe1.EventoNFe.Evento.Items[0] do begin
   with ACBrNFe1.EventoNFe.Evento.Add do begin
      InfEvento.tpEvento := teCCe;
      InfEvento.cOrgao:=StrToInt(codOrgao);
      InfEvento.chNFe:=chave;
      InfEvento.CNPJ:=EdUnid_codigo.ResultFind.fieldbyname('unid_cnpj').AsString;
      if FExpNfetxt.GetTag('tpAmb',Q.fieldbyname('moes_xmlcce').asstring)='1' then
         InfEvento.tpAmb:=taProducao
      else
         InfEvento.tpAmb:=taHomologacao;
      infEvento.dhEvento := Texttodate(
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),9,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),6,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),1,04)
         );
      infEvento.nSeqEvento := strtoint(FExpNfetxt.GetTag('nSeqEvento',Q.fieldbyname('moes_xmlcce').asstring));
      infEvento.detEvento.descEvento := FExpNfetxt.GetTag('xEvento',Q.fieldbyname('moes_xmlcce').asstring);
      infEvento.detEvento.xCorrecao := Q.fieldbyname('moes_obs').asstring;
      infEvento.detEvento.nProt:= FExpNfetxt.GetTag('nProt',Q.fieldbyname('moes_xmlcce').asstring);
      infEvento.detEvento.dhEmi:=Texttodate(
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),9,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),6,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),1,04)
         );
   end;

{
    with ACBrNFe1.EventoNFe.Evento.Add do begin
      InfEvento.tpEvento := teCCe;
      InfEvento.cOrgao:=StrToInt(codOrgao);
      InfEvento.chNFe:=chave;
      InfEvento.CNPJ:=EdUnid_codigo.ResultFind.fieldbyname('unid_cnpj').AsString;

//      if  FGeral.GetConfig1AsString('AmbienteNFe')='1' then
      if FExpNfetxt.GetTag('tpAmb',Q.fieldbyname('moes_xmlcce').asstring)='1' then
         InfEvento.tpAmb:=taProducao
      else
         InfEvento.tpAmb:=taHomologacao;
      infEvento.dhEvento := Texttodate(
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),9,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),6,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),1,04)
         );
      infEvento.nSeqEvento := strtoint(FExpNfetxt.GetTag('nSeqEvento',Q.fieldbyname('moes_xmlcce').asstring));
      infEvento.versaoEvento :='1.00';
      infEvento.detEvento.descEvento := FExpNfetxt.GetTag('xEvento',Q.fieldbyname('moes_xmlcce').asstring);
      infEvento.detEvento.xCorrecao := Q.fieldbyname('moes_obs').asstring;
      infEvento.detEvento.nProt:= FExpNfetxt.GetTag('nProt',Q.fieldbyname('moes_xmlcce').asstring);
      infEvento.detEvento.dhEmi:=Texttodate(
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),9,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),6,02)+
         copy(FExpNfetxt.GetTag('dhRegEvento',Q.fieldbyname('moes_xmlcce').asstring),1,04)
         );
    end;
}

   ACBrNFe1.ImprimirEvento;
   Acbrnfe1.DANFE:=AcbrNfeDanfeRave1;

end;

{
// 19.12.14
procedure TFGerenciaNfe.Exe(Sender: TObject);
/////////////////////////////////////////////////////////////
var ListaArquivo,ListaLinha:TStringList;
    p,xnfsaida:integer;
    xcodigo,xnome,xcpfcnpj,xemissao,xnf,xie,xendereco,xbairro,xfone,xcel,xcep,xestcivil,
    xcadpro,xadmissao,xconjuge,xcpfconjuge,xcontasprodutorleite,transacao,xtransacoes:string;
    xvlrbruto,xinss,xfrete,xtxadm,xtxassoc,xprecoliq:currency;
    demissao:TDatetime;
    var Q,QComv:TSqlquery;
begin
{
   if not od1.execute then exit;
   if trim(od1.FileName)='' then exit;
   ListaArquivo:=TStringList.create;
   ListaArquivo.LoadFromFile(od1.FileName);
   ListaLinha:=TStringList.create;
   strtolista(ListaLinha,ListaArquivo[p],';',true);
   if ListaLinha.Count>10 then xemissao:=ListaLinha[1]
   else xemissao:='';
   if trystrtodate( xemissao,global.datasistema ) then begin
     demissao:=strtodate(xemissao);
   end else begin
      avisoerro('Verificar data de emissão no inicio do arquivo');
      exit;
   end;
   if not confirma('Confirma importação das notas de produtor ? ') then exit;
   Sistema.BeginProcess('eliminando importação anterior');
   Q:=sqltoquery('select moes_transacao from movesto '+
              ' where moes_status=''N'''+
              ' and '+FGeral.getin('moes_tipomov',global.CodCompraProdutor,'C')+
              ' and '+FGeral.getin('moes_plan_codigo',xContasProdutorLeite,'C')+
              ' and moes_unid_codigo='+Stringtosql(Global.CodigoUnidade)+
              ' and moes_dataemissao='+Datetosql(demissao) );
   xtransacoes:='';
   QComv:=sqltoquery('select comv_serie,comv_codigo from confmov where comv_tipomovto='+Stringtosql(Global.CodCompraProdutor));
   xnfsaida:=FGeral.GetContador('NFSAIDA'+Global.CodigoUnidade+FGeral.Qualserie(QComv.fieldbyname('comv_serie').asstring,Global.SerieUnidade),false,false);
   if not Q.eof then
     if not confirma('Numeração de notas está em '+inttostr(xnfsaida)+'.  Confirma ? ') then exit;

   while not Q.eof do begin
     xtransacoes:=xtransacoes+';'+Q.fieldbyname('moes_transacao').asstring;
     Q.Next;
   end;
   Q.close;
   if trim(xtransacoes)<>'' then begin
     Executesql('update movesto set moes_status=''C'''+
              ' where moes_status=''N'''+
              ' and '+FGeral.getin('moes_tipomov',global.CodCompraProdutor,'C')+
              ' and '+FGeral.getin('moes_plan_codigo',xContasProdutorLeite,'C')+
              ' and move_unid_codigo='+Stringtosql(Global.CodigoUnidade)+
              ' and '+FGeral.getin('moes_transacao',xtransacoes,'C')+
              ' and moes_dataemissao='+Datetosql(demissao) );
     Executesql('update movestoque set moes_status=''C'''+
              ' where moes_status=''N'''+
              ' and '+FGeral.getin('move_tipomov',global.CodCompraProdutor,'C')+
              ' and move_unid_codigo='+Stringtosql(Global.CodigoUnidade)+
              ' and '+FGeral.getin('move_transacao',xtransacoes,'C')+
              ' and moes_dataemissao='+Datetosql(demissao) );
     Executesql('update movbase set moes_status=''C'''+
              ' where moes_status=''N'''+
              ' and '+FGeral.getin('movb_tipomov',global.CodCompraProdutor,'C')+
              ' and movb_unid_codigo='+Stringtosql(Global.CodigoUnidade)+
              ' and '+FGeral.getin('movb_transacao',xtransacoes,'C')+
              ' and moes_dataemissao='+Datetosql(demissao) );
     Executesql('update pendencias set pend_status=''C'''+
              ' where moes_status=''N'''+
              ' and pend_unid_codigo='+Stringtosql(Global.CodigoUnidade)+
              ' and '+FGeral.getin('pend_tipomov',global.CodCompraProdutor,'C')+
              ' and '+FGeral.getin('pend_transacao',xtransacoes,'C') );
     Sistema.Endprocess('');
   end;

   for p:=0 to ListaArquivo.Count-1 do begin
     ListaLinha:=TStringList.create;
     strtolista(ListaLinha,ListaArquivo[p],';',true);
     if ListaLinha.Count>10 then xemissao:=ListaLinha[1];
     if trystrtodate( xemissao,Global.Datasistema ) then begin
       demissao:=strtodate(xemissao);
       xnfsaida:=FGeral.GetContador('NFSAIDA'+Global.CodigoUnidade+FGeral.Qualserie(QComv.fieldbyname('comv_serie').asstring,Global.SerieUnidade),false,true);
       transacao:=FGeral.GetTransacao;
       Sistema.Insert('movesto');
        Sistema.SetField('moes_transacao',Transacao);
        Sistema.SetField('moes_operacao',GetOperacao);
        Sistema.SetField('moes_status','N');
        Sistema.SetField('moes_numerodoc',Numero);
        Sistema.SetField('moes_tipomov',Global.CodCompraProdutor);
        Sistema.SetField('moes_comv_codigo',Qcomv.fieldbyname('comv_codigo').AsString);
        Sistema.SetField('moes_unid_codigo',Global.CodigoUnidade);
    //    Sistema.SetField('moes_estado',FCidades.GetUF(Cliente.ResultFind.fieldbyname('clie_cida_codigo_com').AsInteger));
        Sistema.SetField('moes_tipo_codigo',Fornecedor.AsInteger);
    // 31.07.07
    //    if codcidade=0 then begin
          if Tipocad='F' then begin
            Sistema.SetField('moes_estado',Fornecedor.ResultFind.fieldbyname('forn_uf').AsString);
            Sistema.SetField('moes_cida_codigo',Fornecedor.ResultFind.fieldbyname('forn_cida_codigo').AsInteger);
          end else begin
            Sistema.SetField('moes_estado',Fornecedor.ResultFind.fieldbyname('clie_uf').AsString);
            Sistema.SetField('moes_cida_codigo',Fornecedor.ResultFind.fieldbyname('clie_cida_codigo_res').AsInteger);
          end;
    //    end else begin
    //        Sistema.SetField('moes_estado',FCidades.GetUF(codcidade));
    //        Sistema.SetField('moes_cida_codigo',codcidade);
    //    end;
        Sistema.SetField('moes_tipocad',tipocad);
        Sistema.SetField('moes_datalcto',Sistema.Hoje);
        Sistema.SetField('moes_datamvto',Entrada);
    // 11.05.05 - colocado de TE 'em diante' para gravar certo a datacont ( movimento )
    // +';'+Global.CodTransfEntrada+';'+Global.CodTransImobE+';'+global.CodTransfEnt
        if pos(TipoMovimento,Global.CodDevolucaoRoman+';'+Global.CodDevolucaoVenda+';'+Global.CodDevolucaoIgualVenda+';'+Global.CodDevolucaoVendaConsig)>0 then begin
          Sistema.SetField('moes_vlrtotal',Valortotal);
          Sistema.SetField('moes_totprod',totProd);
          Sistema.SetField('moes_repr_codigo',Fornecedor.ResultFind.fieldbyname('clie_repr_codigo').AsInteger);
          if Movimento>1 then begin
            Sistema.SetField('moes_DataCont',Entrada);
            Sistema.SetField('moes_baseicms',baseicms);
            Sistema.SetField('moes_valoricms',valoricms);
            Sistema.SetField('moes_basesubstrib',basesubs);
            Sistema.SetField('moes_valoricmssutr',icmssubs);
          end else begin
    //        Sistema.SetField('moes_vlrtotal',total);
    //        Sistema.SetField('moes_valortotal',valortot);
            Sistema.SetField('moes_valortotal',valortotal);
          end;
        end else begin
          if total=0 then begin
    //        Sistema.SetField('moes_DataCont',Entrada);  // devido as transferencias tipo 2
            Sistema.SetField('moes_DataCont',Movimento);
            Sistema.SetField('moes_vlrtotal',Valortotal);
            Sistema.SetField('moes_baseicms',baseicms);
            Sistema.SetField('moes_valoricms',valoricms);
            Sistema.SetField('moes_basesubstrib',basesubs);
            Sistema.SetField('moes_valoricmssutr',icmssubs);
    //        Sistema.SetField('moes_totprod',Valortotal);
    // 22.06.06
            Sistema.SetField('moes_totprod',totprod);
          end else begin
            Sistema.SetField('moes_vlrtotal',total);
            Sistema.SetField('moes_valortotal',valortot);
          end;
        end;
        Sistema.SetField('moes_dataemissao',Emissao);
        Sistema.SetField('moes_natf_codigo',Natureza);
        Sistema.SetField('moes_freteciffob',ciffob);
        Sistema.SetField('moes_frete',vlrfrete);
        Sistema.SetField('moes_vispra',FCondPagto.GetAvPz(Condicao));
    // 06.10.05
        TiposSerieDiversos:=Global.CodConhecimento+';'+Global.CodCompra+';'+Global.CodCompraSemMovEstoque+';'+Global.CodCompra100+';'+
               Global.CodCompraImobilizado+';'+Global.CodCompraMatConsumo+';'+Global.CodCompraSemfinan+';'+Global.CodCompraX+';'+
               Global.CodDevolucaoConsigMerc+';'+Global.CodRetornoInd+';'+Global.CodRetornocomServicos+';'+Global.coddevolucaoind;
    //    if pos(TipoMovimento,TiposSerieDiversos)>0 then begin
    // deixado o q foi digitado - 23.03.07
          Sistema.SetField('moes_especie',Tipodoc);
          Sistema.SetField('moes_serie',Serie);
    //    end else begin
    //     Sistema.SetField('moes_especie',Arq.TConfmovimento.fieldbyname('comv_especie').asstring);
    //      Sistema.SetField('moes_serie',Arq.TConfmovimento.fieldbyname('comv_serie').asstring);
    //    end;
        if ctran_codigo<>'' then
    // 25.02.13 - alterava errado o transportador
          Sistema.SetField('moes_tran_codigo',ctran_codigo)
        else
          Sistema.SetField('moes_tran_codigo',Arq.TTransp.fieldbyname('tran_codigo').asstring);
        Sistema.SetField('Moes_Perdesco',perdesco);
        Sistema.SetField('Moes_Peracres',peracre);
        Sistema.SetField('moes_usua_codigo',Global.Usuario.Codigo);
    // 01.09.05
        Sistema.SetField('moes_mensagem',mensagem);
    // 20.04.06
        if tipomovimento=Global.CodRetornoind then
          Sistema.SetField('moes_vlrservicos',servicos);
    // 11.07.13 - SM
        if tipomovimento=Global.CodPrestacaoServicosE then
          Sistema.SetField('moes_vlrservicos',servicos);
          Sistema.SetField('moes_baseiss',servicos);
    // 05.06.06
        Sistema.SetField('moes_fpgt_codigo',Fpgt_codigo);
    // 12.06.06
        Sistema.SetField('moes_pedido',Pedido);
    // 22.06.06
        Sistema.SetField('moes_valoripi',valoripi);
        Sistema.SetField('moes_seguro',seguro);
        Sistema.SetField('moes_outrasdesp',outrasdesp);
    // 27.06.06
        Sistema.SetField('moes_tipo_codigoind',Fornecind);
    // 03.04.07 - clessi
        Sistema.SetField('moes_pesoliq',pesoliq);
    // 12.12.07
        if xnfprodutor>0 then
          Sistema.SetField('moes_notapro',xnfprodutor);
        if xnfprodutor2>0 then
          Sistema.SetField('moes_notapro2',xnfprodutor2);
        if xnfprodutor3>0 then
          Sistema.SetField('moes_notapro3',xnfprodutor3);
        if xnfprodutor4>0 then
          Sistema.SetField('moes_notapro4',xnfprodutor4);
        if xnfprodutor5>0 then
          Sistema.SetField('moes_notapro5',xnfprodutor5);
    ///////////////////
    // 03.05.07
    //    Sistema.SetField('moes_notapro',xnfprodutor);
        Sistema.SetField('moes_funrural',funrural);
        Sistema.SetField('moes_cotacapital',cotacapital);
    // 06.03.08
        Sistema.SetField('moes_nroobra',obra);
    // 28.10.09
    // 13.04.10
        campo:=Sistema.GetDicionario('movesto','moes_cola_codigo');
        if campo.Tipo<>'' then
          Sistema.SetField('moes_cola_codigo',Cola_codigo);
        campo:=Sistema.GetDicionario('movesto','moes_km');
        if campo.Tipo<>'' then
          Sistema.SetField('moes_km',km);
    // 30.10.09
        campo:=Sistema.GetDicionario('movesto','moes_plan_codigo');
        if campo.Tipo<>'' then
          Sistema.SetField('moes_plan_codigo',ContaGerencial);
    // 22.10.10
        campo:=Sistema.GetDicionario('movesto','moes_plan_codigocre');
        if campo.Tipo<>'' then
          Sistema.SetField('moes_plan_codigocre',ContaCredito);
    // 12.01.12 - Asatec
        if copy(Natureza,1,1)='3' then begin
          campo:=Sistema.GetDicionario('movesto','moes_numerodi');
          if campo.Tipo<>'' then begin
            Sistema.SetField('moes_numerodi',xnumerodi);
            Sistema.SetField('moes_dtregistro',xdatadi);
            Sistema.SetField('moes_localdesen',xlocaldesem);
            Sistema.SetField('moes_ufdesen',xufdesem);
            Sistema.SetField('moes_dtdesen',xdatadesem);
            Sistema.SetField('moes_codexp',Fornecedor.text);
          end;
        end;
    // 19.11.10 - gravar xml importado na entrada
        if ACBrNFe1.NotasFiscais<>nil then begin
          if ACBrNFe1.NotasFiscais.Count>0 then begin
    // 06.08.12 - para gravar o xml somente quando manda pra sefa
            if TipoMovimento=Global.CodEstornoNFeSai then
              Sistema.setfield('moes_chavenferef',ACBrNFe1.NotasFiscais.Items[0].NFe.procNFe.chNFe)
            else begin
              Sistema.setfield('moes_xmlnfet',ACBrNFe1.NotasFiscais.Items[0].XML) ;
              Sistema.setfield('moes_chavenfe',ACBrNFe1.NotasFiscais.Items[0].NFe.procNFe.chNFe);
            end;
          end;
        end;
    //////////////////
    // 23.08.13
        if Global.Topicos[1365] then Sistema.SetField('moes_seto_codigo',cseto_codigo);

        Sistema.Post();

       Sistema.post();
       Sistema.Insert('movestoque')
       Sistema.post();
       Sistema.Insert('movbase')
       Sistema.post();
     end;
     ListaLinha.Free;
   end;

end;
}

end.

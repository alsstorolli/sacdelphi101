unit pendenciaspendentes;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Mask, SQLEd, Grids, SqlDtg, Buttons, SQLBtn, alabel,
  ExtCtrls, SQLGrid, SqlExpr;

type
  TFPendenciasPendentes = class(TForm)
    SQLPanelGrid1: TSQLPanelGrid;
    pbotoes: TSQLPanelGrid;
    APHeadLabel1: TAPHeadLabel;
    bSair: TSQLBtn;
    bimpressao: TSQLBtn;
    PMens: TSQLPanelGrid;
    SQLPanelGrid3: TSQLPanelGrid;
    SQLPanelGrid4: TSQLPanelGrid;
    PInicial: TSQLPanelGrid;
    Grid: TSqlDtGrid;
    PIns: TSQLPanelGrid;
    GridCheques: TSqlDtGrid;
    SQLPanelGrid2: TSQLPanelGrid;
    procedure bimpressaoClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure ChecaPendenciasPendentes(tp:string='P');
  end;

var
  FPendenciasPendentes: TFPendenciasPendentes;
  qtipo:string;

implementation

uses Geral,Sqlsis,Sqlfun, BaixaPen;

{$R *.dfm}

{ TFPendenciasPendentes }

procedure TFPendenciasPendentes.ChecaPendenciasPendentes(tp: string);
////////////////////////////////////////////////////////////////////////
var sqlusuario,sqlcontas:string;
    Q:TSqlquery;


    procedure QuerytoGrid(Q:Tsqlquery);
    //////////////////////////////////////
    var i,diasatraso:integer;
    begin
      Grid.clear;i:=1;
      while not Q.Eof do begin
         Grid.Cells[Grid.getcolumn('pend_datavcto'),i]:=FGeral.formatadata(Q.fieldbyname('pend_datavcto').asdatetime);
         Grid.Cells[Grid.getcolumn('pend_numerodcto'),i]:=Q.fieldbyname('pend_numerodcto').AsString;
         Grid.Cells[Grid.getcolumn('pend_tipo_codigo'),i]:=Q.fieldbyname('pend_tipo_codigo').AsString;
         Grid.Cells[Grid.getcolumn('razaosocial'),i]:=FGeral.GetNomeRazaoSocialEntidade( Q.fieldbyname('pend_tipo_codigo').AsInteger,
                    Q.fieldbyname('pend_tipocad').AsString,'R');

         Grid.Cells[Grid.getcolumn('pend_parcela'),i]:=Q.fieldbyname('pend_parcela').AsString;
         Grid.Cells[Grid.getcolumn('pend_valor'),i]:=floattostr( Q.fieldbyname('pend_valor').AsCurrency );

          diasatraso:=round( Sistema.hoje - Q.fieldbyname('pend_Datavcto').asdatetime );
{
            if diasatraso>0 then begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='ATRASADO';
            end else if (diasatraso>=-7) and (diasatraso<=0) then begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='NA SEMANA';
            end else begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='EM EXECUÇÃO';
            end;
}
         Grid.Cells[Grid.getcolumn('atraso'),i]:=inttostr(diasatraso);
         Grid.AppendRow;
         inc(i);
         Q.Next;
      end;
    end;

    procedure QuerytoGridCheques(Q:Tsqlquery);
    //////////////////////////////////////
    var i,diasatraso:integer;
    begin
      GridCheques.clear;i:=1;
      while not Q.Eof do begin
         GridCheques.Cells[GridCheques.getcolumn('pend_datavcto'),i]:=FGeral.formatadata(Q.fieldbyname('movf_dataprevista').asdatetime);
         GridCheques.Cells[GridCheques.getcolumn('pend_numerodcto'),i]:=Q.fieldbyname('movf_numerodcto').AsString;
         GridCheques.Cells[GridCheques.getcolumn('pend_tipo_codigo'),i]:=Q.fieldbyname('movf_tipo_codigo').AsString;
         GridCheques.Cells[GridCheques.getcolumn('razaosocial'),i]:='Cheque emitido';
//         FGeral.GetNomeRazaoSocialEntidade( Q.fieldbyname('pend_tipo_codigo').AsInteger,
//                    Q.fieldbyname('pend_tipocad').AsString,'R');

         GridCheques.Cells[GridCheques.getcolumn('pend_parcela'),i]:='1';
         GridCheques.Cells[GridCheques.getcolumn('pend_valor'),i]:=floattostr( Q.fieldbyname('movf_valorger').AsCurrency );

//          diasatraso:=round( Sistema.hoje - Q.fieldbyname('movf_Dataprevista').asdatetime );
          diasatraso:=0;
{
            if diasatraso>0 then begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='ATRASADO';
            end else if (diasatraso>=-7) and (diasatraso<=0) then begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='NA SEMANA';
            end else begin
              Grid.Cells[Grid.getcolumn('situacao'),i]:='EM EXECUÇÃO';
            end;
}
//         GridCheques.Cells[GridCheques.getcolumn('atraso'),i]:=inttostr(diasatraso);
         GridCheques.AppendRow;
         inc(i);
         Q.Next;
      end;
    end;


begin
//////////////////////////////////////

  Pins.Visible:=false;
  Pins.Enabled:=false;
  Sistema.beginprocess('Pesquisando pendencias em atraso');
  qtipo:=tp;
//  sqlusuario:=' and paca_usua_resp='+inttostr(Global.Usuario.Codigo);
  sqlusuario:='';
  Q:=sqltoquery('select * from pendencias where pend_status=''N'''+
                ' and pend_unid_codigo='+stringtosql(Global.CodigoUnidade)+
                ' and pend_rp='+stringtosql(qtipo)+
                ' and pend_databaixa is null'+
//                ' and pend_datavcto-now()<=0'+
                ' and pend_datavcto<='+Datetosql(Sistema.hoje)+
// 10.03.10
                ' and pend_datavcto>='+Datetosql(Sistema.hoje-30)+
                sqlusuario+
                ' order by pend_datavcto');
  if not Q.eof then begin
    Show;
    QuerytoGrid(Q);
  end;
// 19.07.12 - Damama - cheques emitidos
  FGeral.FechaQuery(Q);
  if qtipo='R' then Caption:='Checagem de Recebimentos Pendentes' else Caption:='Checagem de Pagamentos Pendentes';
// criar campo para diversas contas na configuracao geral
//  sqlcontas:=' and '+FGeral.GetIN('movf_plan_conta','2075;2074','N');
  if trim( FGeral.GetConfig1AsString('Contaschacomp') ) <>'' then begin
    sqlcontas:=' and '+FGeral.GetIN('movf_plan_conta',FGeral.GetConfig1AsString('Contaschacomp'),'N');
// ver como pegar somente cheques em aberto ( talvez com sum por numero do documento )
// por enquanto ficamos 'só no lembre'
    Q:=sqltoquery('select * from movfin where movf_status=''N'''+
                  ' and movf_unid_codigo='+stringtosql(Global.CodigoUnidade)+
                  ' and movf_es='+stringtosql('E')+
                  sqlcontas+
//                  ' and movf_dataprevista <= '+Datetosql(Sistema.hoje-3)+
                  ' and movf_dataprevista >= '+Datetosql(Sistema.hoje-3)+
                  ' order by movf_dataprevista');
    if not Q.eof then begin
      Pins.Visible:=true;
      Pins.Enabled:=true;
      QuerytoGridCheques(Q);
    end;
    FGeral.FechaQuery(Q);
  end;

  Sistema.endprocess('');
end;

procedure TFPendenciasPendentes.bimpressaoClick(Sender: TObject);
begin
   FBaixaPendencia.Execute;
end;


procedure TFPendenciasPendentes.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
    FPendenciasPendentes.FreeOnRelease;
end;

end.
